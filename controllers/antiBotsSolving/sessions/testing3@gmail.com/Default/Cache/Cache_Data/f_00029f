{"version":3,"sources":["webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/cache/lodash.get-npm-4.4.2-7bda64ed87-e403047ddb.zip/node_modules/lodash.get/index.js","webpack:///./src/actions/merge-carts.js"],"names":["reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","freeGlobal","global","Object","freeSelf","self","root","Function","uid","arrayProto","Array","prototype","funcProto","objectProto","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","toString","hasOwnProperty","objectToString","reIsNative","RegExp","call","replace","Symbol","splice","Map","getNative","nativeCreate","symbolProto","undefined","symbolToString","Hash","entries","index","length","this","clear","entry","set","ListCache","MapCache","assocIndexOf","array","key","value","other","baseGet","object","path","isKey","isArray","type","isSymbol","test","castPath","stringToPath","toKey","baseIsNative","isObject","isMasked","func","isFunction","tag","isHostObject","result","e","toSource","getMapData","map","data","__data__","isKeyable","getValue","hashClear","hashDelete","has","get","hashGet","hashHas","hashSet","listCacheClear","listCacheDelete","pop","listCacheGet","listCacheHas","listCacheSet","push","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","memoize","string","baseToString","match","number","quote","resolver","TypeError","memoized","args","arguments","apply","cache","Cache","isObjectLike","module","exports","defaultValue","dispatch","shellLocale","getShellLocale","shopInstance","window","NikeShop","internalState","internalStore","getState","getCurrentUser","token","visitorId","visitId","isLoggedIn","country","toUpperCase","langLocale","langRegion","toLowerCase","localeForCurrency","hreflang","ON_INIT_CART","payload","meta","currency","mergeCarts","host","API_HOST_NAME","then","trackEvent","dispatchCustomEvent","createCustomEvent","events","mergedCarts","bubbles","detail","hasMerged"],"mappings":"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","file":"mergeCarts.chunk.d13fdf.js","sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","import { mergeCarts, ON_INIT_CART } from '@nike/ux-tread-cart-redux';\nimport { API_HOST_NAME } from '../constants';\nimport dispatchCustomEvent from '../dispatch-custom-event';\nimport createCustomEvent from '../create-custom-event';\n\nimport getShellLocale from '../get-shell-locale';\nimport getCurrentUser from '../selectors/get-current-user';\nimport trackEvent from '../track-event';\n\nexport default args => dispatch => {\n  const shellLocale = getShellLocale(); // from shell.locale\n  const shopInstance = window?.NikeShop;\n  const internalState = shopInstance?.internalStore?.getState() || {};\n  const { token, visitorId, visitId, isLoggedIn } = getCurrentUser(internalState);\n  const country = shellLocale.country?.toUpperCase();\n  // NOTE langLocale is purely due to tread-cart-redux and supporting legacy code. When we clean it up there we can clean it up here.\n  const langLocale = shellLocale?.langRegion?.toLowerCase().replace('-', '_');\n  const localeForCurrency = shellLocale?.hreflang;\n  dispatch({\n    type: ON_INIT_CART,\n    payload: { country },\n    meta: { langLocale, localeForCurrency, isLoggedIn, currency: shellLocale?.currency },\n  });\n  return dispatch(\n    mergeCarts({\n      ...args,\n      localeForCurrency,\n      langLocale,\n      country,\n      token,\n      visitorId,\n      visitId,\n      host: API_HOST_NAME,\n    }),\n  ).then(data => {\n    trackEvent('nike-shop-cart-merged', null, { country, langLocale, localeForCurrency });\n    dispatchCustomEvent(\n      createCustomEvent(shopInstance?.get()?.events?.mergedCarts, {\n        bubbles: false,\n        detail: { hasMerged: true },\n      }),\n    );\n    return data;\n  });\n};\n"],"sourceRoot":""}