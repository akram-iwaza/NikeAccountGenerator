{"version":3,"sources":["webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/__virtual__/@nike-ux-tread-cart-redux-virtual-bbf0d145b6/0/cache/@nike-ux-tread-cart-redux-npm-6.4.0-cdbd740913-17ea7eeed4.zip/node_modules/@nike/ux-tread-cart-redux/es/actions/fetch-cart.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/__virtual__/@nike-ux-tread-cart-redux-virtual-bbf0d145b6/0/cache/@nike-ux-tread-cart-redux-npm-6.4.0-cdbd740913-17ea7eeed4.zip/node_modules/@nike/ux-tread-cart-redux/es/actions/handle-cart-errors.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/__virtual__/@nike-ux-tread-cart-redux-virtual-bbf0d145b6/0/cache/@nike-ux-tread-cart-redux-npm-6.4.0-cdbd740913-17ea7eeed4.zip/node_modules/@nike/ux-tread-cart-redux/es/actions/merge-carts.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/__virtual__/@nike-ux-tread-cart-redux-virtual-bbf0d145b6/0/cache/@nike-ux-tread-cart-redux-npm-6.4.0-cdbd740913-17ea7eeed4.zip/node_modules/@nike/ux-tread-cart-redux/es/actions/remove-cart-item.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/__virtual__/@nike-ux-tread-cart-redux-virtual-bbf0d145b6/0/cache/@nike-ux-tread-cart-redux-npm-6.4.0-cdbd740913-17ea7eeed4.zip/node_modules/@nike/ux-tread-cart-redux/es/actions/remove-promotion-code.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/__virtual__/@nike-ux-tread-cart-redux-virtual-bbf0d145b6/0/cache/@nike-ux-tread-cart-redux-npm-6.4.0-cdbd740913-17ea7eeed4.zip/node_modules/@nike/ux-tread-cart-redux/es/actions/update-cart-item.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/__virtual__/@nike-ux-tread-cart-redux-virtual-bbf0d145b6/0/cache/@nike-ux-tread-cart-redux-npm-6.4.0-cdbd740913-17ea7eeed4.zip/node_modules/@nike/ux-tread-cart-redux/es/actions/update-cart.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","fetchCart","_ref","undefined","_ref$appId","appId","country","_ref$brand","brand","_ref$channel","channel","cloudStack","merchGroup","token","visitId","visitorId","host","dispatch","Promise","resolve","then","type","payload","service","params","error","notBuyableCodes","PRODUCT_NOT_BUYABLE","OUT_OF_STOCK","quantityLimitCodes","ITEM_QUANTITY_LIMIT","promoCodeErrorCodes","PROMOTION_INVALID","PROMOTION_EXPIRED","handleCartErrors","getState","errors","data","_errors$","_getCartItems","itemsToRemove","e","field","reduce","accum","curr","shouldFilterProduct","code","filteredField","split","x","join","isNaN","lineItemId","replace","shouldAdjustQuantity","reduceQuantity","invalidPromoCodes","concat","notBuyableSkus","hasOverLimitItems","hasNonBuyableItems","hasInvalidPromoCodes","promotionCodes","err","message","crcCode","Error","validateOnly","items","item","skuId","itemsRemoved","_items","_items2","_items3","status","mergeCarts","quantityOnly","fields","removeCartItem","id","map","it","removePromotionCode","_ref$promotionCodes","updateCartItem","giftCard","offer","offers","quantity","recipient","shippingAddress","shippingMethod","valueAddedServices","itemDataToMerge","updateCart","_ref$items","designViewIds","updateCartFn","fetchClient","versionedQuery","variables","o","_o$data","designViews","vasItems","memo","designViewId","String","vas","_vas$product","_vas$product$valueAdd","_vas$product$valueAdd2","_vas$designVasIds","vasType","product","designVasIds","instruction","meta","_error$data"],"mappings":"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","file":"npm.nike~94a17e36.chunk.93759b.js","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getCartsByParams } from '@nike/ux-tread-cart';\nimport { SERVICE_FETCH_CART_CARTS, MISSING_VALUES } from '@nike/cart-constants';\nimport { DOTCOM_UX_ID, NIKECOM_CHANNEL, NIKE_BRAND } from '@nike/ux-tread-dotcom-constants';\nimport handleCartErrors from './handle-cart-errors';\nimport { onInitCart, onFetchSuccess } from './action-creators';\n/**\n * fetchCart proxies api request to either carts\n *\n * @param {object} params - named parameters\n * @param {string} params.appId - app specific id used with unite config\n * @param {string} [params.brand=NIKE_BRAND] - brand is a differentiation for carts, by default it's set to NIKE\n * @param {string} [params.channel=NIKECOM_CHANNEL] - channel is a differentiation for carts, by default it's set to NIKECOM\n * @param {string} params.country - country code\n * @param {string} params.cloudStack - cloud_stack header to pass along to ux-tread-cart\n * @param {string} params.langLocale - language locale\n * @param {string} params.language -   language in cloud url format\n * @param {string} params.localeForCurrency -   - BCP 47 language tag - ux-tread-localization/getLocaleForCurrencyFormatting\n * @param {string} params.merchGroup - locale specific information\n * @param {string} params.token - unite authToken\n * @param {string} params.visitId - visit id\n * @param {string} params.visitorId - visitor id\n * @param {string} params.host - host name to use when calling cart service\n *\n * @returns {Promise} thenable return with dispatched action results\n */\n\nexport default function fetchCart() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$appId = _ref.appId,\n      appId = _ref$appId === void 0 ? DOTCOM_UX_ID : _ref$appId,\n      country = _ref.country,\n      _ref$brand = _ref.brand,\n      brand = _ref$brand === void 0 ? NIKE_BRAND : _ref$brand,\n      _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? NIKECOM_CHANNEL : _ref$channel,\n      cloudStack = _ref.cloudStack,\n      merchGroup = _ref.merchGroup,\n      token = _ref.token,\n      visitId = _ref.visitId,\n      visitorId = _ref.visitorId,\n      host = _ref.host;\n\n  return function (dispatch) {\n    if (!(visitorId || token) || !country) {\n      return Promise.resolve().then(function () {\n        return dispatch({\n          type: MISSING_VALUES,\n          payload: {\n            visitId: visitId,\n            visitorId: visitorId,\n            token: token,\n            country: country\n          }\n        });\n      });\n    }\n\n    var service = SERVICE_FETCH_CART_CARTS;\n    var params = {\n      host: host,\n      cloudStack: cloudStack,\n      brand: brand,\n      channel: channel,\n      appId: appId,\n      token: token,\n      visitId: visitId,\n      visitorId: visitorId,\n      country: country\n    };\n    dispatch(onInitCart(_objectSpread({\n      service: service,\n      country: country,\n      merchGroup: merchGroup,\n      appId: appId,\n      cloudStack: cloudStack\n    }, params)));\n    return getCartsByParams(params).then(function (payload) {\n      return dispatch(onFetchSuccess(_objectSpread({\n        service: service\n      }, payload)));\n    }, function (error) {\n      return dispatch(handleCartErrors({\n        service: service,\n        params: params,\n        error: error\n      }));\n    });\n  };\n}","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport get from 'lodash.get';\nimport removeCartItem from './remove-cart-item';\nimport { onFetchFailure, clearCartState } from './action-creators';\nimport removePromotionCode from './remove-promotion-code';\nimport mergeCarts from './merge-carts';\nimport { getCartItems } from '../selectors'; // Map of error codes that cause us to remove the product from the user's cart:\n\nvar notBuyableCodes = {\n  PRODUCT_NOT_BUYABLE: true,\n  OUT_OF_STOCK: true\n};\nvar quantityLimitCodes = {\n  ITEM_QUANTITY_LIMIT: true\n};\nvar promoCodeErrorCodes = {\n  PROMOTION_INVALID: true,\n  PROMOTION_EXPIRED: true\n};\n/**\n * @ignore\n * @returns {Promise} result of handling cart errors\n */\n\nexport default function handleCartErrors(_ref) {\n  var service = _ref.service,\n      error = _ref.error,\n      params = _ref.params;\n  return function (dispatch, getState) {\n    // 1. destructure errors and data from the error out of the catch block where this is called\n    var errors = error.errors,\n        data = error.data; // 2. check for errors\n\n    if (errors && errors.length) {\n      var _errors$, _getCartItems;\n\n      // 3. reduce over errors that have fields\n      var itemsToRemove = errors.filter(function (e) {\n        return e.field;\n      }).reduce(function (accum, curr) {\n        // 4. check codes to see which errors need to be worked on\n        var shouldFilterProduct = notBuyableCodes[curr.code] || quantityLimitCodes[curr.code] || promoCodeErrorCodes[curr.code]; // 5. from the field string target the item by skuId eg:'item/0/skuId' | '/promotionCodes/0'\n\n        var filteredField = get(data, curr.field.split('/').filter(function (x) {\n          return x;\n        }).join('.')); // 6. if filtered field is a number\n\n        var isANumber = !isNaN(filteredField);\n\n        if (isANumber) {\n          // 7. from the field string target the line item id eg:'item/0/quantity'\n          var lineItemId = curr.field.split('/').filter(function (x) {\n            return x;\n          }).join('.').replace('quantity', 'id');\n          var shouldAdjustQuantity = get(data, lineItemId); // 8. if theres an error to be addressed\n\n          return shouldFilterProduct ? _objectSpread(_objectSpread({}, accum), {}, {\n            reduceQuantity: _objectSpread(_objectSpread({}, accum.reduceQuantity), {}, _defineProperty({}, shouldAdjustQuantity, true))\n          }) : accum;\n        } // 10. if filtered field is not a number and there's an error to be addressed\n\n\n        if (shouldFilterProduct) {\n          if (promoCodeErrorCodes[curr.code]) {\n            return _objectSpread(_objectSpread({}, accum), {}, {\n              invalidPromoCodes: [].concat(_toConsumableArray(accum.invalidPromoCodes), [filteredField // 11. accumulate invalid promoCodes here\n              ])\n            });\n          }\n\n          return _objectSpread(_objectSpread({}, accum), {}, {\n            notBuyableSkus: _objectSpread(_objectSpread({}, accum.notBuyableSkus), {}, _defineProperty({}, filteredField, true))\n          });\n        }\n\n        return accum;\n      }, {\n        invalidPromoCodes: [],\n        notBuyableSkus: {},\n        reduceQuantity: {}\n      }); // 13. determine if cart has any items over limit or has any non buyable items\n\n      var hasOverLimitItems = Object.keys(itemsToRemove.reduceQuantity).length > 0;\n      var hasNonBuyableItems = Object.keys(itemsToRemove.notBuyableSkus).length > 0;\n      var hasInvalidPromoCodes = itemsToRemove.invalidPromoCodes.length > 0; // 14. if there are invalid promos only\n\n      if (hasInvalidPromoCodes && !hasNonBuyableItems && !hasOverLimitItems) {\n        return dispatch(removePromotionCode(_objectSpread(_objectSpread({}, params), {}, {\n          promotionCodes: itemsToRemove.invalidPromoCodes\n        }))).then( // 16. and in all cases afterwards, propagate the errors up\n        function () {\n          return errors.forEach(function (err) {\n            var message = err.message,\n                crcCode = err.crcCode,\n                code = err.code,\n                field = err.field;\n            return dispatch(onFetchFailure({\n              service: service,\n              error: new Error(message),\n              code: code,\n              crcCode: crcCode,\n              data: data,\n              field: field\n            }));\n          });\n        });\n      } // 17. if has items over limit but not non-buyable nor invalid promos\n\n\n      if (hasOverLimitItems && !hasNonBuyableItems && !hasInvalidPromoCodes) {\n        // 18. use mergeCarts with validateOnly flag to force the server to fix the cart\n        return dispatch(mergeCarts(_objectSpread(_objectSpread({}, params), {}, {\n          validateOnly: true\n        }))).then( // 19. propagate the errors up\n        function () {\n          return errors.forEach(function (err) {\n            var message = err.message,\n                crcCode = err.crcCode,\n                code = err.code,\n                field = err.field;\n            return dispatch(onFetchFailure({\n              service: service,\n              error: new Error(message),\n              code: code,\n              crcCode: crcCode,\n              data: data,\n              field: field\n            }));\n          });\n        });\n      } // 20. if hasNonBuyableItems but not over limit items nor invalid promoCodes\n\n\n      if (hasNonBuyableItems && !hasOverLimitItems && !hasInvalidPromoCodes) {\n        var items = get(data, 'items', []).filter(function (item) {\n          return itemsToRemove.notBuyableSkus[item.skuId];\n        });\n\n        if (items.length) {\n          // 21. remove offending items\n          return dispatch(removeCartItem(_objectSpread(_objectSpread({}, params), {}, {\n            items: items\n          }))).then( // 22. propagate the errors up\n          function () {\n            return errors.forEach(function (err) {\n              var message = err.message,\n                  crcCode = err.crcCode,\n                  code = err.code,\n                  field = err.field;\n              return dispatch(onFetchFailure({\n                service: service,\n                error: new Error(message),\n                code: code,\n                crcCode: crcCode,\n                data: data,\n                field: field,\n                itemsRemoved: items\n              }));\n            });\n          });\n        }\n      } // 23. if both non-buyable and over limit but no invalid promos\n\n\n      if (hasNonBuyableItems && hasOverLimitItems && !hasInvalidPromoCodes) {\n        var _items = get(data, 'items', []).filter(function (item) {\n          return itemsToRemove.notBuyableSkus[item.skuId];\n        }); // 24. remove offending items\n\n\n        return dispatch(removeCartItem(_objectSpread(_objectSpread({}, params), {}, {\n          items: _items\n        }))).then(function () {\n          return (// 25. use mergeCarts with validateOnly flag to force the server to fix the cart\n            dispatch(mergeCarts(_objectSpread(_objectSpread({}, params), {}, {\n              validateOnly: true\n            }))).then( // 26. propagate the errors up\n            function () {\n              return errors.forEach(function (err) {\n                var message = err.message,\n                    crcCode = err.crcCode,\n                    code = err.code,\n                    field = err.field;\n                return dispatch(onFetchFailure({\n                  service: service,\n                  error: new Error(message),\n                  code: code,\n                  crcCode: crcCode,\n                  data: data,\n                  field: field,\n                  itemsRemoved: _items\n                }));\n              });\n            })\n          );\n        });\n      } // 27. if has non buyable item & invalid promos but no over limit items\n\n\n      if (hasNonBuyableItems && !hasOverLimitItems && hasInvalidPromoCodes) {\n        var _items2 = get(data, 'items', []).filter(function (item) {\n          return itemsToRemove.notBuyableSkus[item.skuId];\n        }); // 28. first remove items\n\n\n        return dispatch(removeCartItem(_objectSpread(_objectSpread({}, params), {}, {\n          items: _items2\n        }))).then( // 29. then replace items\n        function () {\n          return dispatch(removePromotionCode(_objectSpread(_objectSpread({}, params), {}, {\n            promotionCodes: itemsToRemove.invalidPromoCodes\n          }))).then(function () {\n            return errors.forEach(function (err) {\n              var message = err.message,\n                  crcCode = err.crcCode,\n                  code = err.code,\n                  field = err.field; // 30. propagate the errors up\n\n              return dispatch(onFetchFailure({\n                service: service,\n                error: new Error(message),\n                code: code,\n                crcCode: crcCode,\n                data: data,\n                field: field,\n                itemsRemoved: _items2\n              }));\n            });\n          });\n        });\n      } // 31. if has over limit item & invalid promos\n\n\n      if (!hasNonBuyableItems && hasOverLimitItems && hasInvalidPromoCodes) {\n        // 32. use mergeCarts with validateOnly flag to force the server to fix the cart\n        return dispatch(mergeCarts(_objectSpread(_objectSpread({}, params), {}, {\n          validateOnly: true\n        }))).then( // 33. then remove promo codes\n        function () {\n          return dispatch(removePromotionCode(_objectSpread(_objectSpread({}, params), {}, {\n            promotionCodes: itemsToRemove.invalidPromoCodes\n          }))).then( // 34. then propagate the errors up\n          function () {\n            return errors.forEach(function (err) {\n              var message = err.message,\n                  crcCode = err.crcCode,\n                  code = err.code,\n                  field = err.field;\n              return dispatch(onFetchFailure({\n                service: service,\n                error: new Error(message),\n                code: code,\n                crcCode: crcCode,\n                data: data,\n                field: field\n              }));\n            });\n          });\n        });\n      } // 35. if has non-buyable, over limit and invalid promos\n\n\n      if (hasNonBuyableItems && hasOverLimitItems && hasInvalidPromoCodes) {\n        var _items3 = get(data, 'items', []).filter(function (item) {\n          return itemsToRemove.notBuyableSkus[item.skuId];\n        }); // 36. first remove items\n\n\n        return dispatch(removeCartItem(_objectSpread(_objectSpread({}, params), {}, {\n          items: _items3\n        }))).then(function () {\n          return (// 37. use mergeCarts with validateOnly flag to force the server to fix the cart\n            dispatch(mergeCarts(_objectSpread(_objectSpread({}, params), {}, {\n              validateOnly: true\n            }))) // 38. then remove promo codes\n            .then(function () {\n              return dispatch(removePromotionCode(_objectSpread(_objectSpread({}, params), {}, {\n                promotionCodes: itemsToRemove.invalidPromoCodes\n              })));\n            }) // 39. then propagate the errors up\n            .then(function () {\n              return errors.forEach(function (err) {\n                var message = err.message,\n                    crcCode = err.crcCode,\n                    code = err.code,\n                    field = err.field;\n                return dispatch(onFetchFailure({\n                  service: service,\n                  error: new Error(message),\n                  crcCode: crcCode,\n                  code: code,\n                  data: data,\n                  field: field,\n                  itemsRemoved: _items3\n                }));\n              });\n            })\n          );\n        });\n      } // 40. Handle invalid session when navigating through user journey. Clearing previous state for empty cart.\n\n\n      if ((errors === null || errors === void 0 ? void 0 : (_errors$ = errors[0]) === null || _errors$ === void 0 ? void 0 : _errors$.status) === 404 && ((_getCartItems = getCartItems(getState())) === null || _getCartItems === void 0 ? void 0 : _getCartItems.length) > 0) {\n        dispatch(clearCartState());\n      }\n\n      return errors.forEach(function (err) {\n        var message = err.message,\n            crcCode = err.crcCode,\n            code = err.code,\n            field = err.field; // 41. if we have errors after handling the above cases afterwards, propagate them up\n\n        return dispatch(onFetchFailure({\n          service: service,\n          error: new Error(message),\n          code: code,\n          crcCode: crcCode,\n          data: data,\n          field: field\n        }));\n      });\n    } // 42. if no errors, then propagate the entire error up\n\n\n    return dispatch(onFetchFailure({\n      service: service,\n      error: error,\n      data: data\n    }));\n  };\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mergeCartsByParams } from '@nike/ux-tread-cart';\nimport { SERVICE_MERGE_CARTS } from '@nike/cart-constants';\nimport { DOTCOM_UX_ID, NIKECOM_CHANNEL, NIKE_BRAND } from '@nike/ux-tread-dotcom-constants';\nimport handleCartErrors from './handle-cart-errors';\nimport { onFetchStart, onFetchSuccess } from '../actions/action-creators';\n/**\n * mergeCarts will delete the entire cart and should be used for clearing cart\n *\n * @param {object} params - named parameters\n * @param {boolean} params.quantityOnly - boolean to indicate to service to return cart count only\n * @param {boolean} params.validateOnly - boolean to indicate to service to validate the cart only\n * @param {string} [params.appId=DOTCOM_UX_ID] - app id for headers to identify client in logs\n * @param {string} params.token - consumer jwt, user token\n * @param {string} params.visitId - unite visit id\n * @param {string} params.visitorId - unite visitor id\n * @param {string} [params.brand=NIKE_BRAND] - brand is a differentiation for carts, by default it's set to NIKE\n * @param {string} [params.channel=NIKECOM_CHANNEL] - channel is a differentiation for carts, by default it's set to NIKECOM\n * @param {string} params.country - 2 letter ISO country code\n * @param {string} params.cloudStack - aws stack name to include in headers, by default undefined which points to production\n * @param {string} params.host - host name to use when calling carts service\n * @returns {Promise} fetch promise\n */\n\nexport default function mergeCarts(_ref) {\n  var _ref$brand = _ref.brand,\n      brand = _ref$brand === void 0 ? NIKE_BRAND : _ref$brand,\n      _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? NIKECOM_CHANNEL : _ref$channel,\n      country = _ref.country,\n      cloudStack = _ref.cloudStack,\n      host = _ref.host,\n      token = _ref.token,\n      visitId = _ref.visitId,\n      visitorId = _ref.visitorId,\n      validateOnly = _ref.validateOnly,\n      quantityOnly = _ref.quantityOnly,\n      _ref$appId = _ref.appId,\n      appId = _ref$appId === void 0 ? DOTCOM_UX_ID : _ref$appId;\n  return function (dispatch) {\n    var service = SERVICE_MERGE_CARTS;\n    var params = {\n      appId: appId,\n      brand: brand,\n      channel: channel,\n      country: country,\n      token: token,\n      visitId: visitId,\n      visitorId: visitorId,\n      validateOnly: validateOnly,\n      cloudStack: cloudStack,\n      host: host\n    };\n\n    if (quantityOnly) {\n      params.fields = 'totals.quantity,errors,warnings';\n    }\n\n    dispatch(onFetchStart({\n      service: service,\n      country: country,\n      token: token,\n      visitorId: visitorId,\n      visitId: visitId\n    }));\n    return mergeCartsByParams(params).then(function (payload) {\n      return dispatch(onFetchSuccess(_objectSpread({\n        service: service\n      }, payload)));\n    }, function (error) {\n      return dispatch(handleCartErrors({\n        service: service,\n        params: params,\n        error: error\n      }));\n    });\n  };\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { removeItemsByParams } from '@nike/ux-tread-cart';\nimport { SERVICE_REMOVE_ITEM } from '@nike/cart-constants';\nimport { DOTCOM_UX_ID, NIKECOM_CHANNEL, NIKE_BRAND } from '@nike/ux-tread-dotcom-constants';\nimport handleCartErrors from './handle-cart-errors';\nimport { onFetchStart, onFetchSuccess } from './action-creators';\n/**\n * removeCartItem allows you to remove a single cart item with a given id\n *\n * @param {object} params - named parameters\n * @param  {string} params.id - cart item id\n * @param  {string} [params.appId=DOTCOM_UX_ID] - app id for headers to identify client in logs\n * @param  {string} params.token - consumer jwt, user token\n * @param  {string} params.visitId - unite visit id\n * @param  {string} params.visitorId - unite visitor id\n * @param  {string} [params.brand=NIKE_BRAND] - brand is a differentiation for carts, by default it's set to NIKE\n * @param  {string} [params.channel=NIKECOM_CHANNEL] - channel is a differentiation for carts, by default it's set to NIKECOM\n * @param  {string} params.country - 2 letter ISO country code\n * @param  {string} params.cloudStack - aws stack name to include in headers, by default undefined which points to production\n * @param  {string} params.host - host name to use when calling carts service\n * @param  {Array} [params.items=[]] - array of items to be patched in the cart\n * @returns {Promise} fetch promise\n */\n\nexport default function removeCartItem(_ref) {\n  var _ref$appId = _ref.appId,\n      appId = _ref$appId === void 0 ? DOTCOM_UX_ID : _ref$appId,\n      _ref$brand = _ref.brand,\n      brand = _ref$brand === void 0 ? NIKE_BRAND : _ref$brand,\n      _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? NIKECOM_CHANNEL : _ref$channel,\n      country = _ref.country,\n      cloudStack = _ref.cloudStack,\n      host = _ref.host,\n      items = _ref.items,\n      id = _ref.id,\n      token = _ref.token,\n      visitId = _ref.visitId,\n      visitorId = _ref.visitorId;\n  return function (dispatch) {\n    var params = {\n      host: host,\n      cloudStack: cloudStack,\n      token: token,\n      visitId: visitId,\n      visitorId: visitorId,\n      appId: appId,\n      brand: brand,\n      channel: channel,\n      country: country,\n      items: items ? items.map(function (it) {\n        return {\n          id: it.id\n        };\n      }) : [{\n        id: id\n      }]\n    };\n    var service = SERVICE_REMOVE_ITEM;\n    dispatch(onFetchStart(_objectSpread({\n      service: service\n    }, params)));\n    return removeItemsByParams(params).then(function (payload) {\n      return dispatch(onFetchSuccess(_objectSpread({\n        service: service\n      }, payload)));\n    }, function (error) {\n      return dispatch(handleCartErrors({\n        service: service,\n        params: params,\n        error: error\n      }));\n    });\n  };\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { removePromotionCodeById } from '@nike/ux-tread-cart';\nimport { SERVICE_REMOVE_PROMOTION } from '@nike/cart-constants';\nimport { DOTCOM_UX_ID, NIKECOM_CHANNEL, NIKE_BRAND } from '@nike/ux-tread-dotcom-constants';\nimport { onFetchStart, onFetchSuccess } from './action-creators';\nimport handleCartErrors from './handle-cart-errors';\n/**\n * removeCartItem allows you to remove a single cart item with a given id\n *\n * @param {object} params - named parameters\n * @param  {string} [params.appId=DOTCOM_UX_ID] - app id for headers to identify client in logs\n * @param  {string} params.token - consumer jwt, user token\n * @param  {string} params.visitId - unite visit id\n * @param  {string} params.visitorId - unite visitor id\n * @param  {string} [params.brand=NIKE_BRAND] - brand is a differentiation for carts, by default it's set to NIKE\n * @param  {string} [params.channel=NIKECOM_CHANNEL] - channel is a differentiation for carts, by default it's set to NIKECOM\n * @param  {string} params.country - 2 letter ISO country code\n * @param  {string} params.cloudStack - aws stack name to include in headers, by default undefined which points to production\n * @param  {string} params.host - host name to use when using grand\n * @param  {Array} [params.promotionCodes=[]] - promocodes to remove from cart\n * @returns {Promise} fetch promise\n */\n\nexport default function removePromotionCode(_ref) {\n  var _ref$appId = _ref.appId,\n      appId = _ref$appId === void 0 ? DOTCOM_UX_ID : _ref$appId,\n      _ref$brand = _ref.brand,\n      brand = _ref$brand === void 0 ? NIKE_BRAND : _ref$brand,\n      _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? NIKECOM_CHANNEL : _ref$channel,\n      country = _ref.country,\n      cloudStack = _ref.cloudStack,\n      host = _ref.host,\n      token = _ref.token,\n      _ref$promotionCodes = _ref.promotionCodes,\n      promotionCodes = _ref$promotionCodes === void 0 ? [] : _ref$promotionCodes,\n      visitId = _ref.visitId,\n      visitorId = _ref.visitorId;\n  return function (dispatch) {\n    var params = {\n      host: host,\n      cloudStack: cloudStack,\n      token: token,\n      visitId: visitId,\n      visitorId: visitorId,\n      appId: appId,\n      brand: brand,\n      channel: channel,\n      country: country,\n      // 'items' are action entities, not 'cart' items.  Contains the data\n      // used in the patch within patch-carts-by-params.js\n      items: promotionCodes\n    };\n    var service = SERVICE_REMOVE_PROMOTION;\n    dispatch(onFetchStart(_objectSpread({\n      service: service\n    }, params)));\n    return removePromotionCodeById(params).then(function (payload) {\n      return dispatch(onFetchSuccess(_objectSpread({\n        service: service\n      }, payload)));\n    }, function (error) {\n      return dispatch(handleCartErrors({\n        service: service,\n        params: params,\n        error: error\n      }));\n    });\n  };\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { replaceItemsByParams } from '@nike/ux-tread-cart';\nimport { SERVICE_UPDATE_ITEM } from '@nike/cart-constants';\nimport { DOTCOM_UX_ID, NIKECOM_CHANNEL, NIKE_BRAND } from '@nike/ux-tread-dotcom-constants';\nimport { onFetchStart, onFetchSuccess } from './action-creators';\nimport handleCartErrors from './handle-cart-errors';\nimport { createItemData } from '../utils';\n/**\n * updateCartItem is a thunk that updates a single cart line item\n *\n * @param {object} params - named parameters\n * @param {object} params.giftCard - giftCard object with amount:price\n * @param {object} params.shippingAddress - shipping address object\n * @param {string} params.shippingMethod - shipping method\n * @param {string} params.id - line item id - if preexisting update item else create line item\n * @param {string} [params.appId=DOTCOM_UX_ID] - app id for headers to identify client in logs\n * @param {string} params.token - consumer jwt, user token\n * @param {string} params.visitId - unite visit id\n * @param {string} params.visitorId - unite visitor id\n * @param {string} [params.brand=NIKE_BRAND] - brand is a differentiation for carts, by default it's set to NIKE\n * @param {string} [params.channel=NIKECOM_CHANNEL] - channel is a differentiation for carts, by default it's set to NIKECOM\n * @param {string} params.country - 2 letter ISO country code\n * @param {string} params.cloudStack - aws stack name to include in headers, by default undefined which points to production\n * @param {string} params.host - host name to use when calling cart service\n * @param {string} params.offer - offer to patch to cart item\n * @param {string} params.offers - offers to patch to cart item\n * @param {Array} params.items - array of items to be patched in the cart\n * @param {Array} params.valueAddedServices - array of valueAddedServices to be patched in the item in cart\n * @param {number} params.quantity - item quantity to replace\n * @param {string} params.skuId - item skuId to replace\n * @param {object} params.recipient - gift card recipient\n * @returns {Promise} fetch promise\n */\n\nexport default function updateCartItem(_ref) {\n  var _ref$appId = _ref.appId,\n      appId = _ref$appId === void 0 ? DOTCOM_UX_ID : _ref$appId,\n      _ref$brand = _ref.brand,\n      brand = _ref$brand === void 0 ? NIKE_BRAND : _ref$brand,\n      _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? NIKECOM_CHANNEL : _ref$channel,\n      cloudStack = _ref.cloudStack,\n      country = _ref.country,\n      giftCard = _ref.giftCard,\n      host = _ref.host,\n      id = _ref.id,\n      items = _ref.items,\n      offer = _ref.offer,\n      offers = _ref.offers,\n      quantity = _ref.quantity,\n      recipient = _ref.recipient,\n      shippingAddress = _ref.shippingAddress,\n      shippingMethod = _ref.shippingMethod,\n      skuId = _ref.skuId,\n      token = _ref.token,\n      valueAddedServices = _ref.valueAddedServices,\n      visitId = _ref.visitId,\n      visitorId = _ref.visitorId;\n  return function (dispatch) {\n    var service = SERVICE_UPDATE_ITEM;\n    var itemDataToMerge = createItemData();\n    var params = {\n      host: host,\n      cloudStack: cloudStack,\n      token: token,\n      visitId: visitId,\n      visitorId: visitorId,\n      appId: appId,\n      brand: brand,\n      channel: channel,\n      country: country,\n      items: items ? items.map(function (item) {\n        return _objectSpread(_objectSpread({}, itemDataToMerge), item);\n      }) : [_objectSpread({\n        giftCard: giftCard,\n        id: id,\n        offer: offer,\n        offers: offers,\n        quantity: quantity,\n        recipient: recipient,\n        shippingAddress: shippingAddress,\n        shippingMethod: shippingMethod,\n        skuId: skuId,\n        valueAddedServices: valueAddedServices\n      }, itemDataToMerge)]\n    };\n    dispatch(onFetchStart(_objectSpread({\n      service: service\n    }, params)));\n    return replaceItemsByParams(params).then(function (payload) {\n      return dispatch(onFetchSuccess(_objectSpread({\n        service: service\n      }, payload)));\n    }, function (error) {\n      return dispatch(handleCartErrors({\n        service: service,\n        params: params,\n        error: error\n      }));\n    });\n  };\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { addItemsByParams, replaceItemsByParams } from '@nike/ux-tread-cart';\nimport { ADD_TO_CARTS_SUCCESS, SERVICE_ATC_CARTS, VAS_INSTRUCTION_TYPE_MAP } from '@nike/cart-constants';\nimport { DOTCOM_UX_ID, NIKECOM_CHANNEL, NIKE_BRAND } from '@nike/ux-tread-dotcom-constants';\nimport { fetchClient } from '@nike/fetch-client';\nimport graphqlFetch from '@nike/graphql-fetch';\nimport handleCartErrors from './handle-cart-errors';\nimport { onFetchStart } from './action-creators';\nimport { getCartItems } from '../selectors';\nimport { createItemData } from '../utils';\n/**\n * updateCart allows merging carts and updating the entire cart\n * Passing in items can add items array to the cart.\n *\n * @param {object} params - named parameters\n * @param {string} [params.appId=DOTCOM_UX_ID] - app id for headers to identify client in logs\n * @param {string} params.token - consumer jwt, user token\n * @param {string} params.visitId - unite visit id\n * @param {string} params.visitorId - unite visitor id\n * @param {string} [params.brand=NIKE_BRAND] - brand is a differentiation for carts, by default it's set to NIKE\n * @param {string} [params.channel=NIKECOM_CHANNEL] - channel is a differentiation for carts, by default it's set to NIKECOM\n * @param {string} params.country - 2 letter ISO country code\n * @param {string} params.cloudStack - aws stack name to include in headers, by default undefined which points to production\n * @param {string} params.host - host name to use when calling cart service\n * @param {string} params.id - optionally pass in to edit/replace item\n * @param {Array} [params.items=[]] - array of items to be patched in the cart\n * @param {Array} [params.promotionCodes=[]] - promocodes to apply to cart\n * @param {string} params.designViewIds - customization product identifiers to add or edit in cart\n * @param {string}  [params.offer] - optional UUID for exclusive access offer\n* @param {Array<{ id: string, type: string}>}  [params.offers] - optional offers for ExAx and NCP. This section is not intended for CN\n * @returns {Promise} thenable return with dispatched action results\n */\n\nexport default function updateCart(_ref) {\n  var offer = _ref.offer,\n      offers = _ref.offers,\n      token = _ref.token,\n      visitId = _ref.visitId,\n      visitorId = _ref.visitorId,\n      _ref$brand = _ref.brand,\n      brand = _ref$brand === void 0 ? NIKE_BRAND : _ref$brand,\n      _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? NIKECOM_CHANNEL : _ref$channel,\n      country = _ref.country,\n      cloudStack = _ref.cloudStack,\n      host = _ref.host,\n      id = _ref.id,\n      _ref$items = _ref.items,\n      items = _ref$items === void 0 ? [] : _ref$items,\n      _ref$appId = _ref.appId,\n      appId = _ref$appId === void 0 ? DOTCOM_UX_ID : _ref$appId,\n      _ref$promotionCodes = _ref.promotionCodes,\n      promotionCodes = _ref$promotionCodes === void 0 ? [] : _ref$promotionCodes,\n      designViewIds = _ref.designViewIds;\n  return function (dispatch, getState) {\n    var itemDataToMerge = createItemData();\n    var params = {\n      host: host,\n      cloudStack: cloudStack,\n      token: token,\n      visitId: visitId,\n      visitorId: visitorId,\n      appId: appId,\n      brand: brand,\n      channel: channel,\n      country: country,\n      items: items.map(function (item) {\n        return _objectSpread(_objectSpread({}, itemDataToMerge), item);\n      }) // NOTE - we are most likely to want to preserve any existing itemData field than not. This will avoid overwriting the pdp url if it's actually being edited somewhere.\n\n    };\n    var service = SERVICE_ATC_CARTS;\n\n    if (promotionCodes.length) {\n      params.promotionCodes = promotionCodes;\n    }\n\n    dispatch(onFetchStart(_objectSpread({\n      service: service\n    }, params)));\n\n    if (designViewIds !== null && designViewIds !== void 0 && designViewIds.length) {\n      var updateCartFn = id ? replaceItemsByParams : addItemsByParams;\n      return graphqlFetch({\n        appId: appId,\n        fetchClient: fetchClient,\n        cloudStack: cloudStack,\n        versionedQuery: 'getskudesignviewids/v1',\n        variables: {\n          designViewIds: designViewIds,\n          country: country\n        }\n      }).then(function (o) {\n        var _o$data;\n\n        var designViews = ((_o$data = o.data) === null || _o$data === void 0 ? void 0 : _o$data.designViews) || [];\n        var vasItems = designViewIds.reduce(function (memo, curr, i) {\n          memo.push(_objectSpread({\n            designViewId: String(curr)\n          }, designViews[i]));\n          return memo;\n        }, []);\n        params.items = vasItems.map(function (vas) {\n          var _vas$product, _vas$product$valueAdd, _vas$product$valueAdd2, _vas$designVasIds;\n\n          var vasType = vas === null || vas === void 0 ? void 0 : (_vas$product = vas.product) === null || _vas$product === void 0 ? void 0 : (_vas$product$valueAdd = _vas$product.valueAddedServices) === null || _vas$product$valueAdd === void 0 ? void 0 : (_vas$product$valueAdd2 = _vas$product$valueAdd[0]) === null || _vas$product$valueAdd2 === void 0 ? void 0 : _vas$product$valueAdd2.vasType;\n          return _objectSpread(_objectSpread({}, itemDataToMerge), {}, {\n            id: id,\n            offer: offer,\n            // offerid and nby is a thing\n            offers: offers,\n            skuId: vas.skuId,\n            quantity: 1,\n            valueAddedServices: [{\n              id: vas === null || vas === void 0 ? void 0 : (_vas$designVasIds = vas.designVasIds) === null || _vas$designVasIds === void 0 ? void 0 : _vas$designVasIds[0],\n              instruction: {\n                id: vas.designViewId,\n                type: VAS_INSTRUCTION_TYPE_MAP[vasType]\n              }\n            }]\n          });\n        });\n        return updateCartFn(params).then(function (data) {\n          return dispatch({\n            type: ADD_TO_CARTS_SUCCESS,\n            meta: {\n              service: service\n            },\n            payload: {\n              data: data\n            }\n          });\n        }, function (error) {\n          return dispatch(handleCartErrors({\n            service: service,\n            params: params,\n            error: error\n          }));\n        });\n      });\n    }\n\n    return addItemsByParams(params).then(function (data) {\n      return dispatch({\n        type: ADD_TO_CARTS_SUCCESS,\n        meta: {\n          service: service\n        },\n        payload: {\n          data: data\n        }\n      });\n    }, function (error) {\n      var _error$data;\n\n      var data = (error === null || error === void 0 ? void 0 : error.data) || {};\n\n      if (!(error !== null && error !== void 0 && (_error$data = error.data) !== null && _error$data !== void 0 && _error$data.items)) {\n        data = _objectSpread(_objectSpread({}, (error === null || error === void 0 ? void 0 : error.data) || {}), {}, {\n          items: getCartItems(getState())\n        });\n      }\n\n      return dispatch(handleCartErrors({\n        service: service,\n        params: params,\n        error: _objectSpread(_objectSpread({}, error), {}, {\n          data: data\n        })\n      }));\n    });\n  };\n}"],"sourceRoot":""}