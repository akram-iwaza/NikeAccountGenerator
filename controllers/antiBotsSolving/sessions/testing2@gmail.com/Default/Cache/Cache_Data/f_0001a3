{"version":3,"sources":["webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/name-formatter/formatters.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/name-formatter/index.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/number/currency-codes.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/number/dangerous-overrides.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/number/number.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/number/whole-number.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/phone-formatter/dangerous-overrides.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/phone-formatter/index.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/relative-time/relative-time.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/translations/convert-translations.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/translations/get-translation.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/utils/locale-map.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/utils/log.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-core-npm-1.9.3-60cbceee04-e1c73bcc8e.zip/node_modules/@nike/i18n-core/lib/utils/supports-intl.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-pseudo-npm-1.1.1-b07584b0f6-ff8f6cc184.zip/node_modules/@nike/i18n-pseudo/es/generate-pseudo.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-pseudo-npm-1.1.1-b07584b0f6-ff8f6cc184.zip/node_modules/@nike/i18n-pseudo/es/index.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-i18n-pseudo-npm-1.1.1-b07584b0f6-ff8f6cc184.zip/node_modules/@nike/i18n-pseudo/es/reference/character-map.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.153.0/.yarn/cache/@nike-shop-public-constants-npm-1.5.0-a3503b37c3-9685e664e3.zip/node_modules/@nike/shop-public-constants/es/index.js"],"names":["Object","defineProperty","exports","value","default","latin","separator","short","local","mixed","ref","__importDefault","this","mod","__esModule","format","formatters_1","getLocaleFormat","locale","args","_a","toLowerCase","script","familyName","givenName","scripts","Array","from","Set","test","length","getScript","style","template","_b","styleKey","getTemplateFormat","replace","module","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","applyNumberFormatWithDangerousOverrides","dangerouslyOverrideEnInCurrencySymbol","dangerouslyOverrideKoKrCurrencyName","dangerouslyOverrideFrMaMadCurrencyAsSymbol","dangerouslyOverrideEnVnVndCurrency","dangerouslyOverrideHuHuEurCurrencyAsSymbol","dangerouslyOverrideEnSkEurCurrencyAsSymbol","dangerouslyOverrideEnSgSgdCurrency","dangerouslyOverrideEnRoRonCurrencyAsSymbol","dangerouslyOverrideEnNoNokCurrencyAsSymbol","dangerouslyOverrideEnMaMadCurrencyAsSymbol","dangerouslyOverrideEnIdIdrCurrency","dangerouslyOverrideEnHrHrkCurrencyAsSymbol","dangerouslyOverrideEnBgBgnCurrencyAsSymbol","getFinalNumberFromOptions","whole_number_1","number","options","encourageWholeNumbers","finalOpts","nfObj","Intl","NumberFormat","formatToParts","assign","currencyDisplay","currency","i18n_pseudo_1","locale_map_1","currency_codes_1","dangerous_overrides_1","numberFormat","finalLocale","keys","filter","key","forEach","Error","toUpperCase","includes","join","parts","split","numberOutput","getAsWholeNumberWhenPossible","fractPiece","find","type","map","Number","applyCountrySpecificPhoneFormats","country","phoneNumber","bareNumber","slice","asYouType","libphonenumber_js_1","text","parsePhoneNumber","trim","isValid","raw","national","formatNational","international","formatInternational","formattedNumber","AsYouType","input","relativeTimeFormat","unit","reduce","accumulator","currKey","currValue","relativeOutput","RelativeTimeFormat","convertTranslationsFromLocPlatform","getAvailableCountriesFromTranslation","translationSet","notSupportedLanguages","translations","lazy","newTranslations","countryKeys","locStringData","newKeys","countryKey","comment","processICUString","log_1","IntlMessageFormat","DEVELOPMENT_TAGS","string","langTag","icuTokens","icuOptions","stringKey","msg","logWarn","getTranslation","originalString","description","primaryValueStr","undefined","finalString","pseudo","logError","log","console","warn","error","supportsIntl","doFullCheck","january","Date","DateTimeFormat","month","err","FULL_CHALLENGING_CHARACTERS","PARTIAL_CHALLENGING_CHARACTERS","EXPANDING_CHAR_STRING","expandString","str","expansionPercent","challengeChars","arguments","finalStr","addLength","Math","round","substr","generatePseudo","prepend","append","ignoreMap","_","char","output","ignoreFn","c","a","b","d","f","g","h","l","k","j","m","n","o","q","r","u","v","w","x","y","z","A","B","C","D","E","F","G","H","I","L","K","J","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","0","1","2","3","4","5","6","7","8","9","NIKE_SHOP_ROOT_ID"],"mappings":"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","file":"npm.nike~e82b4ee9.chunk.a390cd.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst formats = {\n    default: { latin: { default: '%G%s%F', separator: ' ', short: '%G' } },\n    'hu-hu': { latin: { default: '%F%s%G' } },\n    'ja-jp': { local: { default: '%F%G' }, latin: { default: '%G%s%F', short: '%F' }, mixed: { default: '%G%s%F' } },\n    'ko-kr': {\n        local: { default: '%F%G', short: '%F%G' },\n        latin: { default: '%G%s%F', short: '%G%s%F' },\n        mixed: { default: '%G%s%F', short: '%G%s%F' },\n    },\n    'zh-cn': {\n        local: { default: '%F%G', short: '%F%G' },\n        latin: { default: '%G%s%F', short: '%G%s%F' },\n        mixed: { default: '%G%s%F', short: '%G%s%F' },\n    },\n    'zh-hans-cn': { ref: 'zh-cn' },\n    'zh-hant-tw': { ref: 'zh-cn' },\n    'zh-hant-hk': { ref: 'zh-cn' },\n    'zh-hk': { ref: 'zh-cn' },\n    'zh-mo': { ref: 'zh-cn' },\n    'zh-tw': { ref: 'zh-cn' },\n    'vi-vn': { latin: { default: '%F%s%G' } },\n};\nexports.default = formats;\n//# sourceMappingURL=formatters.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.format = void 0;\nconst formatters_1 = __importDefault(require(\"./formatters\"));\nconst getLocaleFormat = (locale) => {\n    const format = formatters_1.default[locale];\n    if (!format) {\n        return formatters_1.default.default;\n    }\n    if ('ref' in format) {\n        return getLocaleFormat(format.ref);\n    }\n    return format;\n};\nconst getTemplateFormat = (script, locale, style) => {\n    var _a, _b;\n    const format = getLocaleFormat(locale);\n    const styleKey = style === 'short' ? 'short' : 'default';\n    return {\n        separator: ((_a = format[script]) === null || _a === void 0 ? void 0 : _a.separator) || formatters_1.default.default.latin.separator,\n        template: ((_b = format[script]) === null || _b === void 0 ? void 0 : _b[styleKey]) || formatters_1.default.default.latin[styleKey],\n    };\n};\nconst getScript = ({ familyName, givenName }) => {\n    const scripts = Array.from(new Set([/^[a-zA-Z]+$/.test(familyName) ? 'latin' : 'local', /^[a-zA-Z]+$/.test(givenName) ? 'latin' : 'local']));\n    return scripts.length > 1 ? 'mixed' : scripts[0];\n};\nconst format = (args) => {\n    var _a;\n    // Normalizing locale\n    const locale = ((_a = args.locale) === null || _a === void 0 ? void 0 : _a.toLowerCase()) || 'default';\n    const script = getScript(args);\n    const { familyName, givenName, style } = args;\n    const { separator, template } = getTemplateFormat(script, locale, style);\n    const output = template\n        .replace('%F', familyName || '')\n        .replace('%G', givenName || '')\n        .replace('%s', args.separator || separator || '');\n    return output;\n};\nexports.format = format;\nexports.default = exports.format;\n//# sourceMappingURL=index.js.map","\"use strict\";\nmodule.exports = [\n    'AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT',\n    'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD', 'BTN', 'BWP', 'BYN', 'BZD',\n    'CAD', 'CDF', 'CHE', 'CHF', 'CHW', 'CLF', 'CLP', 'CNY', 'COP', 'COU', 'CRC', 'CUC', 'CUP',\n    'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP',\n    'GEL', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR',\n    'ILS', 'INR', 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW',\n    'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA',\n    'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD',\n    'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG',\n    'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL',\n    'SOS', 'SRD', 'SSP', 'STD', 'SVC', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY',\n    'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'USN', 'UYI', 'UYU', 'UZS', 'VEF', 'VND', 'VUV',\n    'WST', 'XAF', 'XAG', 'XAU', 'XBA', 'XBB', 'XBC', 'XBD', 'XCD', 'XDR', 'XOF', 'XPD', 'XPF',\n    'XPT', 'XSU', 'XTS', 'XUA', 'XXX', 'YER', 'ZAR', 'ZMW', 'ZWL',\n];\n//# sourceMappingURL=currency-codes.js.map","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyNumberFormatWithDangerousOverrides = exports.dangerouslyOverrideEnInCurrencySymbol = exports.dangerouslyOverrideKoKrCurrencyName = exports.dangerouslyOverrideFrMaMadCurrencyAsSymbol = exports.dangerouslyOverrideEnVnVndCurrency = exports.dangerouslyOverrideHuHuEurCurrencyAsSymbol = exports.dangerouslyOverrideEnSkEurCurrencyAsSymbol = exports.dangerouslyOverrideEnSgSgdCurrency = exports.dangerouslyOverrideEnRoRonCurrencyAsSymbol = exports.dangerouslyOverrideEnNoNokCurrencyAsSymbol = exports.dangerouslyOverrideEnMaMadCurrencyAsSymbol = exports.dangerouslyOverrideEnIdIdrCurrency = exports.dangerouslyOverrideEnHrHrkCurrencyAsSymbol = exports.dangerouslyOverrideEnBgBgnCurrencyAsSymbol = exports.getFinalNumberFromOptions = void 0;\nconst whole_number_1 = __importDefault(require(\"./whole-number\"));\nconst isProd = process.env.NODE_ENV === 'production';\n/**\n * G11N-1704 - Depending on the passed options, we have to generate our\n * INTL number in a few different ways. That means we need one function\n * referenced by all \"danger\" functions.\n *\n * @param {number} number The number to internationalize\n * @param {object} options The options for this number\n */\nconst getFinalNumberFromOptions = (locale, number, options) => {\n    // Saving this option's value then removing it from the larger object\n    const { encourageWholeNumbers } = options, finalOpts = __rest(options, [\"encourageWholeNumbers\"]);\n    // Create the NF object, which could be used in a few different ways\n    const nfObj = new Intl.NumberFormat(locale, finalOpts);\n    // We were told to return whole numbers\n    if (encourageWholeNumbers) {\n        // The function is available\n        if (typeof nfObj.formatToParts === 'function') {\n            return whole_number_1.default(nfObj, number);\n        }\n        if (!isProd) {\n            // Send a warning that we can't display whole numbers\n            // eslint-disable-next-line no-console\n            console.warn('Can\\'t generate a whole number as NumberFormat.formatToParts() is unavailable');\n        }\n    }\n    return nfObj.format(number);\n};\nexports.getFinalNumberFromOptions = getFinalNumberFromOptions;\n/**\n * Request in G11N-1676. Research and approval documentation located at:\n * https://confluence.nike.com/pages/viewpage.action?pageId=314412833\n */\nconst dangerouslyOverrideEnBgBgnCurrencyAsSymbol = (number, options) => {\n    // We don't want any options passed along other than the one below\n    const { encourageWholeNumbers } = options;\n    const finalOpts = { encourageWholeNumbers };\n    // By the time the code hits this function, we are guaranteed to know\n    // that we want this to be the currency symbol to use\n    const finalSymbol = 'лв.';\n    // Our research determined that in this case we want English-based\n    // numbers as part of this output, so generate that as a number (not a currency)\n    const finalNumber = exports.getFinalNumberFromOptions('en', number, finalOpts);\n    // Now we merge the two and return, WITH a space\n    return `${finalNumber} ${finalSymbol}`;\n};\nexports.dangerouslyOverrideEnBgBgnCurrencyAsSymbol = dangerouslyOverrideEnBgBgnCurrencyAsSymbol;\n/**\n* Request in G11N-1675. Research and approval documentation located at:\n* https://confluence.nike.com/pages/viewpage.action?pageId=314411721\n*/\nconst dangerouslyOverrideEnHrHrkCurrencyAsSymbol = (number, options) => {\n    // We don't want any options passed along other than the one below\n    const { encourageWholeNumbers } = options;\n    const finalOpts = { encourageWholeNumbers };\n    // By the time the code hits this function, we are guaranteed to know\n    // that we want this to be the currency symbol to use\n    const finalSymbol = 'kn';\n    // Our research determined that in this case we want English-based\n    // numbers as part of this output, so generate that as a number (not a currency)\n    const finalNumber = exports.getFinalNumberFromOptions('en', number, finalOpts);\n    // Now we merge the two and return, WITH a space\n    return `${finalNumber} ${finalSymbol}`;\n};\nexports.dangerouslyOverrideEnHrHrkCurrencyAsSymbol = dangerouslyOverrideEnHrHrkCurrencyAsSymbol;\n/**\n * Requested as part of G11N-1466. The reason this overwrite is was\n * deemed \"okay\" by the team is because en-ID is not an ICU supported language, but\n * is none-the-less one that Nike needs to use for English speakers in Indonesia.\n *\n * The overwrite here needs to use the Indonesian current symbol (Rp) but with\n * US number separators. The native Intl.NumberFormat function does not have the\n * ability to achieve this, therefore we must make an overwrite.\n */\nconst dangerouslyOverrideEnIdIdrCurrency = (number, options) => {\n    // Enforce certain options so we're guaranteed to get the output we expect\n    const finalOpts = Object.assign(Object.assign({}, options), { currencyDisplay: 'symbol' });\n    // Get the default output from Intl.NumberFormat\n    const finalNumber = exports.getFinalNumberFromOptions('en-ID', number, finalOpts);\n    /* numFormat will either be IDR<space>123,456 or IDR<no space>123,456 depending on if\n      we're in the browser or using node. The following logic should just replace IDR without\n      making a decision on the presence of a space */\n    return finalNumber.replace('IDR', 'Rp');\n};\nexports.dangerouslyOverrideEnIdIdrCurrency = dangerouslyOverrideEnIdIdrCurrency;\n/**\n* Request in G11N-1683. Research and approval documentation located at:\n* https://confluence.nike.com/pages/viewpage.action?pageId=314412950\n*/\nconst dangerouslyOverrideEnMaMadCurrencyAsSymbol = (number, options) => {\n    // We don't want any options passed along other than the one below\n    const { encourageWholeNumbers } = options;\n    const finalOpts = { encourageWholeNumbers };\n    // By the time the code hits this function, we are guaranteed to know\n    // that we want this to be the currency symbol to use\n    const finalSymbol = 'Dh';\n    // Our research determined that in this case we want English-based\n    // numbers as part of this output, so generate that as a number (not a currency)\n    const finalNumber = exports.getFinalNumberFromOptions('en', number, finalOpts);\n    // Now we merge the two and return, WITH a space\n    return `${finalNumber} ${finalSymbol}`;\n};\nexports.dangerouslyOverrideEnMaMadCurrencyAsSymbol = dangerouslyOverrideEnMaMadCurrencyAsSymbol;\n/**\n* Request in G11N-1671. Research and approval documentation located at:\n* https://confluence.nike.com/pages/viewpage.action?pageId=313641051\n*/\nconst dangerouslyOverrideEnNoNokCurrencyAsSymbol = (number, options) => {\n    // We don't want any options passed along other than the one below\n    const { encourageWholeNumbers } = options;\n    const finalOpts = { encourageWholeNumbers };\n    // By the time the code hits this function, we are guaranteed to know\n    // that we want this to be the currency symbol to use\n    const finalSymbol = 'kr';\n    // Our research determined that in this case we want English-based\n    // numbers as part of this output, so generate that as a number (not a currency)\n    const finalNumber = exports.getFinalNumberFromOptions('en', number, finalOpts);\n    // Now we merge the two and return, WITH a space\n    return `${finalSymbol} ${finalNumber}`;\n};\nexports.dangerouslyOverrideEnNoNokCurrencyAsSymbol = dangerouslyOverrideEnNoNokCurrencyAsSymbol;\n/**\n* Request in G11N-1675. Research and approval documentation located at:\n* https://confluence.nike.com/pages/viewpage.action?pageId=314411721\n*/\nconst dangerouslyOverrideEnRoRonCurrencyAsSymbol = (number, options) => {\n    // We don't want any options passed along other than the one below\n    const { encourageWholeNumbers } = options;\n    const finalOpts = { encourageWholeNumbers };\n    // By the time the code hits this function, we are guaranteed to know\n    // that we want this to be the currency symbol to use\n    const finalSymbol = 'lei';\n    // Our research determined that in this case we want English-based\n    // numbers as part of this output, so generate that as a number (not a currency)\n    const finalNumber = exports.getFinalNumberFromOptions('en', number, finalOpts);\n    // Now we merge the two and return, WITH a space\n    return `${finalNumber} ${finalSymbol}`;\n};\nexports.dangerouslyOverrideEnRoRonCurrencyAsSymbol = dangerouslyOverrideEnRoRonCurrencyAsSymbol;\n/**\n * Request in G11N-1458.\n * Discussed and approved in subtask G11N-1515.\n *\n * Most Singaporean web experiences have a currency display convention not supported by Intl.NumberFormat.\n * This override modifies the output to match Singaporean expectations around this topic:\n * Currency displays should include an `S` before the `$`; e.g., `S$9,999.00`.\n */\nconst dangerouslyOverrideEnSgSgdCurrency = (number, options) => {\n    // Enforce certain options so we're guaranteed to get the output we expect\n    const finalOpts = Object.assign(Object.assign({}, options), { currencyDisplay: 'symbol' });\n    // Get the default output from Intl.NumberFormat and add an `S` in front.\n    return `S${exports.getFinalNumberFromOptions('en-SG', number, finalOpts)}`;\n};\nexports.dangerouslyOverrideEnSgSgdCurrency = dangerouslyOverrideEnSgSgdCurrency;\n/**\n* Request in G11N-1673. Research and approval documentation located at:\n* https://confluence.nike.com/pages/viewpage.action?pageId=313649979\n*/\nconst dangerouslyOverrideEnSkEurCurrencyAsSymbol = (number, options) => {\n    // We don't want any options passed along other than the one below\n    const { encourageWholeNumbers } = options;\n    const finalOpts = { encourageWholeNumbers };\n    // By the time the code hits this function, we are guaranteed to know\n    // that we want this to be the currency symbol to use\n    const finalSymbol = '€';\n    // Our research determined that in this case we want English-based\n    // numbers as part of this output, so generate that as a number (not a currency)\n    const finalNumber = exports.getFinalNumberFromOptions('en', number, finalOpts);\n    // Now we merge the two and return, WITH a space\n    return `${finalNumber} ${finalSymbol}`;\n};\nexports.dangerouslyOverrideEnSkEurCurrencyAsSymbol = dangerouslyOverrideEnSkEurCurrencyAsSymbol;\n/**\n * Request in G11N-4083\n */\nconst dangerouslyOverrideHuHuEurCurrencyAsSymbol = (number, options) => {\n    // We don't want any options passed along other than the one below\n    const { encourageWholeNumbers } = options;\n    const finalOpts = { encourageWholeNumbers };\n    // By the time the code hits this function, we are guaranteed to know\n    // that we want this to be the currency symbol to use\n    const finalSymbol = '€';\n    // Our research determined that in this case we want English-based\n    // numbers as part of this output, so generate that as a number (not a currency)\n    const finalNumber = exports.getFinalNumberFromOptions('hu-HU', number, finalOpts);\n    // Now we merge the two and return, WITH a space\n    return `${finalNumber} ${finalSymbol}`;\n};\nexports.dangerouslyOverrideHuHuEurCurrencyAsSymbol = dangerouslyOverrideHuHuEurCurrencyAsSymbol;\n/**\n * Request in G11N-1458.\n * Discussed and approved in subtask G11N-1516.\n *\n * Vietnamese web experiences have a currency display convention of placing the `₫` after the number.\n * This override function modifies the output to match Vietnamese expectations around this issue:\n * Currency displays should be something like `9,999.00₫`.\n */\nconst dangerouslyOverrideEnVnVndCurrency = (number, options) => {\n    // Enforce certain options so we're guaranteed to get the output we expect\n    const finalOpts = Object.assign(Object.assign({}, options), { currencyDisplay: 'symbol' });\n    // Get the default output from Intl.NumberFormat\n    const numFormat = exports.getFinalNumberFromOptions('en-VN', number, finalOpts);\n    // Get the default output from Intl.NumberFormat, remove the ₫ at the beginning, and append to end of string.\n    return `${numFormat.replace('₫', '')}₫`;\n};\nexports.dangerouslyOverrideEnVnVndCurrency = dangerouslyOverrideEnVnVndCurrency;\n/**\n* Request in G11N-1681. Research and approval documentation located at:\n* https://confluence.nike.com/pages/viewpage.action?pageId=314412929\n*/\nconst dangerouslyOverrideFrMaMadCurrencyAsSymbol = (number, options) => {\n    // We don't want any options passed along other than the one below\n    const { encourageWholeNumbers } = options;\n    const finalOpts = { encourageWholeNumbers };\n    // By the time the code hits this function, we are guaranteed to know\n    // that we want this to be the currency symbol to use\n    const finalSymbol = 'Dh';\n    // Our research determined that in this case we want French-based\n    // numbers as part of this output, so generate that as a number (not a currency)\n    const finalNumber = exports.getFinalNumberFromOptions('fr-MA', number, finalOpts);\n    // Now we merge the two and return, WITH a space\n    return `${finalNumber} ${finalSymbol}`;\n};\nexports.dangerouslyOverrideFrMaMadCurrencyAsSymbol = dangerouslyOverrideFrMaMadCurrencyAsSymbol;\n/**\n * Request in G11N-1458.\n */\nconst dangerouslyOverrideKoKrCurrencyName = (number, options) => {\n    // Enforce certain options so we're guaranteed to get the output we expect\n    const finalOpts = Object.assign(Object.assign({}, options), { currencyDisplay: 'name' });\n    // Get the default output from Intl.NumberFormat\n    const numFormat = exports.getFinalNumberFromOptions('ko', number, finalOpts);\n    // Get the default output from Intl.NumberFormat, remove '대한민국 '\n    return numFormat.replace('대한민국 ', '');\n};\nexports.dangerouslyOverrideKoKrCurrencyName = dangerouslyOverrideKoKrCurrencyName;\nconst dangerouslyOverrideEnInCurrencySymbol = (number, options) => {\n    // Enforce certain options so we're guaranteed to get the output we expect\n    const finalOpts = Object.assign(Object.assign({}, options), { currencyDisplay: 'symbol' });\n    // Get the default output from Intl.NumberFormat\n    const numFormat = exports.getFinalNumberFromOptions('en-IN', number, finalOpts);\n    // Get the default output from Intl.NumberFormat, remove '대한민국 '\n    return numFormat.replace('₹', '₹ ').replace(/,/g, ' ');\n};\nexports.dangerouslyOverrideEnInCurrencySymbol = dangerouslyOverrideEnInCurrencySymbol;\n/**\n * This function generates a number string with the passed args. In\n * very few instances we override the default output with some Nike\n * specific logic.\n *\n * NOTE: Exceptions should NEVER be added without a lot of discussion\n * and string reasoning as to why we should break from the Intl standards\n *\n * @param {string} locale The BCP-47 locale\n * @param {number} number The number to display\n * @param {object} options The Intl.NumberFormat options\n */\nconst applyNumberFormatWithDangerousOverrides = (locale, number, options) => {\n    const { style, currency, currencyDisplay } = options;\n    if (locale === 'en-BG' && style === 'currency' && currency === 'BGN'\n        && (currencyDisplay && currencyDisplay === 'symbol')) {\n        return exports.dangerouslyOverrideEnBgBgnCurrencyAsSymbol(number, options);\n    }\n    if (locale === 'en-HR' && style === 'currency' && currency === 'HRK'\n        && (currencyDisplay && currencyDisplay === 'symbol')) {\n        return exports.dangerouslyOverrideEnHrHrkCurrencyAsSymbol(number, options);\n    }\n    if (locale === 'en-ID' && style === 'currency' && currency === 'IDR') {\n        return exports.dangerouslyOverrideEnIdIdrCurrency(number, options);\n    }\n    if (locale === 'en-MA' && style === 'currency' && currency === 'MAD'\n        && (currencyDisplay && currencyDisplay === 'symbol')) {\n        return exports.dangerouslyOverrideEnMaMadCurrencyAsSymbol(number, options);\n    }\n    if (locale === 'en-NO' && style === 'currency' && currency === 'NOK'\n        && (currencyDisplay && currencyDisplay === 'symbol')) {\n        return exports.dangerouslyOverrideEnNoNokCurrencyAsSymbol(number, options);\n    }\n    if (locale === 'en-RO' && style === 'currency' && currency === 'RON'\n        && (currencyDisplay && currencyDisplay === 'symbol')) {\n        return exports.dangerouslyOverrideEnRoRonCurrencyAsSymbol(number, options);\n    }\n    if (locale === 'en-SG' && style === 'currency' && currency === 'SGD') {\n        return exports.dangerouslyOverrideEnSgSgdCurrency(number, options);\n    }\n    if (locale === 'en-SK' && style === 'currency' && currency === 'EUR'\n        && (currencyDisplay && currencyDisplay === 'symbol')) {\n        return exports.dangerouslyOverrideEnSkEurCurrencyAsSymbol(number, options);\n    }\n    if (locale === 'en-VN' && style === 'currency' && currency === 'VND') {\n        return exports.dangerouslyOverrideEnVnVndCurrency(number, options);\n    }\n    if (locale === 'fr-MA' && style === 'currency' && currency === 'MAD'\n        && (currencyDisplay && currencyDisplay === 'symbol')) {\n        return exports.dangerouslyOverrideFrMaMadCurrencyAsSymbol(number, options);\n    }\n    if (locale === 'hu-HU' && style === 'currency' && currency === 'EUR'\n        && currencyDisplay === 'symbol') {\n        return exports.dangerouslyOverrideHuHuEurCurrencyAsSymbol(number, options);\n    }\n    if ((locale === 'ko' || locale === 'ko-KR') && style === 'currency' && currency === 'KRW'\n        && (!currencyDisplay || currencyDisplay === 'name')) {\n        return exports.dangerouslyOverrideKoKrCurrencyName(number, options);\n    }\n    if (locale === 'en-IN' && style === 'currency' && currency === 'INR'\n        && (!currencyDisplay || currencyDisplay === 'symbol')) {\n        return exports.dangerouslyOverrideEnInCurrencySymbol(number, options);\n    }\n    return exports.getFinalNumberFromOptions(locale, number, options);\n};\nexports.applyNumberFormatWithDangerousOverrides = applyNumberFormatWithDangerousOverrides;\nexports.default = exports.applyNumberFormatWithDangerousOverrides;\n//# sourceMappingURL=dangerous-overrides.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst i18n_pseudo_1 = __importDefault(require(\"@nike/i18n-pseudo\"));\nconst locale_map_1 = __importDefault(require(\"../utils/locale-map\"));\nconst currency_codes_1 = __importDefault(require(\"./currency-codes\"));\nconst dangerous_overrides_1 = __importDefault(require(\"./dangerous-overrides\"));\n/**\n * This function generates a number string with the passed args *\n *\n * @param {string} locale The BCP-47 locale\n * @param {number} number The number to display\n * @param {object} options The Intl.NumberFormat options\n */\nfunction numberFormat(locale, number, options = {}) {\n    const finalOpts = options;\n    let finalLocale = locale;\n    // Removing any options that were given a null value. This mostly\n    // comes from the React component\n    Object.keys(finalOpts)\n        .filter((key) => finalOpts[key] === null)\n        .forEach((key) => delete finalOpts[key]);\n    // Give an informative error if the dev passed a style option but\n    // didn't pass a currency code.\n    if (finalOpts.style === 'currency' && !finalOpts.currency) {\n        throw new Error('You set the style option to \"currency\", but didn\\'t pass a ' +\n            'currency code in the currency option. Pro-Tip: If you pass a currency code, we ' +\n            'automatically set the style option to \"currency\".');\n    }\n    // Set the style to currency if the currency option was passed\n    if (finalOpts.currency) {\n        finalOpts.currency = finalOpts.currency.toUpperCase();\n        if (!currency_codes_1.default.includes(finalOpts.currency)) {\n            throw new Error(`The currency code \"${finalOpts.currency}\" is not valid. Possible ` +\n                `codes are:\\n${currency_codes_1.default.join(', ')}\\n\\nSee full documentation here:\\n` +\n                'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects' +\n                '/NumberFormat');\n        }\n        finalOpts.style = 'currency';\n    }\n    // Map this locale if necessary\n    if (Object.keys(locale_map_1.default).includes(locale)) {\n        finalLocale = locale_map_1.default[locale];\n    }\n    // Fix the locale's cases\n    else {\n        const parts = locale.split('-');\n        if (parts.length === 2) {\n            finalLocale = `${parts[0].toLowerCase()}-${parts[1].toUpperCase()}`;\n        }\n    }\n    // Generate the final number, with any overrides\n    let numberOutput = dangerous_overrides_1.default(finalLocale, number, options);\n    // Apply pseudo if necessary\n    if (locale === 'pseudo') {\n        numberOutput = i18n_pseudo_1.default(numberOutput);\n    }\n    return numberOutput;\n}\nexports.default = numberFormat;\n//# sourceMappingURL=number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAsWholeNumberWhenPossible = void 0;\n/**\n * Attempts to return the given number as a whole number, assuming\n * the \"fraction\" piece is equal to zero. If not, it returns as-is.\n *\n * Note: This function intentionally assumes the presence of\n *    NF.formatToParts()\n *\n * @param {NumberFormat} numberFormat The NumberFormat object\n * @param {number} number The number to generate\n */\nconst getAsWholeNumberWhenPossible = (numberFormat, number) => {\n    const parts = numberFormat.formatToParts(number);\n    const fractPiece = parts.find(p => p.type === 'fraction');\n    // No fraction was found, therefore we return the number as-is\n    if (!fractPiece) {\n        return parts.map(p => p.value).join('');\n    }\n    // We have a fraction, now determine whether the value is zero\n    const fractValIsZero = Number(fractPiece.value) === 0;\n    // The fraction value is equal to zero\n    if (fractValIsZero) {\n        return parts\n            // Remove the decimal and fraction objects\n            .filter(({ type }) => !['decimal', 'fraction'].includes(type))\n            // Push into a single array\n            .map(({ value }) => value)\n            // Mush the filtered array into a string\n            .join('');\n    }\n    // Our fraction isn't zero, therefore return as-is\n    return parts.map(p => p.value).join('');\n};\nexports.getAsWholeNumberWhenPossible = getAsWholeNumberWhenPossible;\nexports.default = exports.getAsWholeNumberWhenPossible;\n//# sourceMappingURL=whole-number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyCountrySpecificPhoneFormats = void 0;\nconst applyCountrySpecificPhoneFormats = (country, phoneNumber) => {\n    if (country === 'KR') {\n        if (/^0\\d{2}-\\d{4}-\\d{2}$/.test(phoneNumber)) {\n            const bareNumber = phoneNumber.replace(/-/g, '');\n            return `${bareNumber.slice(0, 3)}-${bareNumber.slice(3, 6)}-${bareNumber.slice(-3)}`;\n        }\n        if (/^\\+82 (?:\\d{4} \\d{4}|\\d{2} \\d{4} \\d{2})$/.test(phoneNumber)) {\n            const bareNumber = phoneNumber.replace(/ /g, '');\n            return `${bareNumber.slice(0, 3)}-${bareNumber.slice(3, 5)}-${bareNumber.slice(5, -3)}-${bareNumber.slice(-3)}`;\n        }\n        return phoneNumber.replace(/ /g, '-');\n    }\n    return phoneNumber;\n};\nexports.applyCountrySpecificPhoneFormats = applyCountrySpecificPhoneFormats;\nexports.default = exports.applyCountrySpecificPhoneFormats;\n//# sourceMappingURL=dangerous-overrides.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asYouType = exports.format = void 0;\nconst libphonenumber_js_1 = require(\"libphonenumber-js\");\nconst dangerous_overrides_1 = require(\"./dangerous-overrides\");\nconst format = (country, text) => {\n    try {\n        const phoneNumber = libphonenumber_js_1.parsePhoneNumber(text.trim(), country);\n        if (phoneNumber.isValid()) {\n            return {\n                raw: text,\n                country,\n                national: phoneNumber.formatNational(),\n                international: phoneNumber.formatInternational(),\n            };\n        }\n        return null;\n    }\n    catch (e) {\n        throw new Error('NOT_A_NUMBER');\n    }\n};\nexports.format = format;\nconst asYouType = (country, text) => {\n    let formattedNumber = new libphonenumber_js_1.AsYouType(country).input(text);\n    formattedNumber = dangerous_overrides_1.applyCountrySpecificPhoneFormats(country, formattedNumber);\n    return formattedNumber;\n};\nexports.asYouType = asYouType;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst i18n_pseudo_1 = __importDefault(require(\"@nike/i18n-pseudo\"));\nconst locale_map_1 = __importDefault(require(\"../utils/locale-map\"));\nfunction relativeTimeFormat(locale, value, unit, options = {}) {\n    // Removing any options that were given a null value.\n    // This mostly comes from the React component.\n    const finalOpts = Object.keys(options).reduce((accumulator, currKey) => {\n        const currValue = options[currKey];\n        if (currValue !== null) {\n            accumulator[currKey] = currValue;\n        }\n        return accumulator;\n    }, {});\n    let finalLocale = locale;\n    // Map this locale if necessary\n    if (Object.keys(locale_map_1.default).includes(locale)) {\n        finalLocale = locale_map_1.default[locale];\n    }\n    let relativeOutput = new Intl.RelativeTimeFormat(finalLocale, finalOpts).format(value, unit);\n    if (locale === 'pseudo') {\n        relativeOutput = i18n_pseudo_1.default(relativeOutput);\n    }\n    return relativeOutput;\n}\nexports.default = relativeTimeFormat;\n//# sourceMappingURL=relative-time.js.map","\"use strict\";\n/**\n* A utility that converts the LocPlatform's translation file to\n* one that makes it easier to look up by languages.\n*\n* Initial Format from LocPlatform:\n*  {\n*    \"results\": 2,\n*    \"translations\": [{\n*      \"en\": \"Some String\",\n*      \"comment\": \"Some Description\",\n*      \"key\": \"some_key\"\n*    }, {\n*      \"en\": \"Some other String\",\n*      \"comment\": \"Other Description\",\n*      \"key\": \"some_other_key\"\n*    }]\n*  }\n*\n* Separate Langs Format:\n*  {\n*    \"en\": {\n*      \"some_key\": {\n*        \"value\": \"Some String\"\n*        \"comment\": \"Some Description\",\n*      },\n*     \"some_other_key\": {\n*       value\": \"Some other String\"\n*       \"comment\": \"Other Description\",\n*      },\n*    }\n*  }\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertTranslationsFromLocPlatform = exports.getAvailableCountriesFromTranslation = void 0;\n/**\n * ex translationSet: {\n *   \"en\": \"Some String\",\n *   \"fr\": \"Some String in French\",\n *   \"comment\": \"Some Description\",\n *   \"key\": \"some_key\"\n * ex available countries array: [\"en\", \"fr\"]\n */\n/**\n * Takes in the first set of translations and makes an array of\n * countries available\n * @param  {object} translationSet First subset of translation object from json\n * @return {array}                 Returns avaliable countries\n */\nconst getAvailableCountriesFromTranslation = (translationSet) => {\n    const notSupportedLanguages = ['key', 'comment'];\n    return Object.keys(translationSet)\n        .filter(key => !notSupportedLanguages.includes(key));\n};\nexports.getAvailableCountriesFromTranslation = getAvailableCountriesFromTranslation;\n/**\n * Translate loctool json to country based json format to better support production\n * @param {object} translations - The JSON translation file from the LocPlatform\n * @param {bool} lazy - Wheter to check available countries for each string or check for just first string.\n * @return {object} newTranslations - JSON file separated by countries\n */\nconst convertTranslationsFromLocPlatform = (translations, lazy = true) => {\n    const newTranslations = {};\n    let countryKeys = exports.getAvailableCountriesFromTranslation(translations.translations[0]);\n    if (!lazy) {\n        translations.translations.forEach((locStringData) => {\n            const newKeys = exports.getAvailableCountriesFromTranslation(locStringData);\n            countryKeys = [\n                ...countryKeys,\n                ...newKeys,\n            ];\n        });\n    }\n    countryKeys.forEach((countryKey) => {\n        newTranslations[countryKey] = {};\n        translations.translations.forEach((locStringData) => {\n            newTranslations[countryKey][locStringData.key] = {\n                value: locStringData[countryKey],\n                comment: locStringData.comment,\n            };\n        });\n    });\n    return newTranslations;\n};\nexports.convertTranslationsFromLocPlatform = convertTranslationsFromLocPlatform;\n//# sourceMappingURL=convert-translations.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.processICUString = void 0;\nconst i18n_pseudo_1 = __importDefault(require(\"@nike/i18n-pseudo\"));\nconst log_1 = require(\"../utils/log\");\nconst IntlMessageFormat = require('intl-messageformat');\n// A list of tags that only exist in development mode\nconst DEVELOPMENT_TAGS = ['pseudo', 'primary-value', 'string-keys'];\n/**\n * This accepts a given string and other parameters and processes any ICU message data\n * @param {string} string - The ICU message string\n * @param {string|array} langTag - The language to localize the ICU data into\n * @param {object} icuTokens - An object including the values to inject into the ICU message\n * @param {object} icuOptions - An object of options to pass along to the IntlMessageFormat module\n * @param {string} stringKey - the stringKey to which the ICU message string is associated\n * @return {string} Return\n */\nconst processICUString = (string, langTag, icuTokens, icuOptions, stringKey) => {\n    const msg = new IntlMessageFormat(string, langTag, icuOptions);\n    try {\n        return msg.format(icuTokens);\n    }\n    catch (e) {\n        log_1.logWarn('Error in processing ICU string - please check for mismatching ICU tokens and '\n            + `options for stringKey '${stringKey}' in language '${langTag}'`);\n        return stringKey;\n    }\n};\nexports.processICUString = processICUString;\n/**\n * Handles all of the logic to receive a stringKey / langTag and outputs the relevant translation\n *\n * @param {string} stringKey - The key associated with this specific string\n * @param {string} langTag - This is for dev env only. <'pseudo', 'primary-value', 'string-keys'>\n * @param {string} originalString - The string's Primary Value, mostly used during development\n * @param {string} description - The string's description, currently just being used to\n *                               verify it exists\n * @param {object} translations - The translations object for a specific language\n * @return {type} Return\n */\nfunction getTranslation(stringKey, langTag, originalString, description, translations, icuTokens = null, icuOptions = {}) {\n    // Bail if we don't have a stringKey\n    if (!stringKey) {\n        throw new Error('You must pass the \\'stringKey\\' param');\n    }\n    // Bail if we don't have a langTag\n    if (!langTag) {\n        throw new Error('You must pass the \\'langTag\\' param');\n    }\n    // Heavily incourage the use of descriptions\n    if (!description) {\n        log_1.logWarn(`It's highly recommended you provide a description for the string ${stringKey}`);\n    }\n    // We're currently using a development locale\n    if (DEVELOPMENT_TAGS.includes(langTag)) {\n        // Don't do any of the below logic if we just need to output the string's key\n        if (langTag === 'string-keys') {\n            return stringKey;\n        }\n        // Getting the primary value or a default string\n        let primaryValueStr = originalString || '[No String Provided]';\n        // Process the ICU content if we were given tokens\n        if (icuTokens !== null) {\n            primaryValueStr = exports.processICUString(primaryValueStr, langTag, icuTokens, icuOptions, stringKey);\n        }\n        // Apply pseudo translation to the original string passed\n        if (langTag === 'pseudo') {\n            return i18n_pseudo_1.default(primaryValueStr);\n        }\n        // Output the primary value as it was given to us\n        return primaryValueStr;\n    }\n    if (translations[stringKey] === undefined) {\n        log_1.logWarn(`The string ${stringKey} doesn't exist in the provided translation `\n            + 'file. We\\'ve wrapped the string in ≪≫ characters so you don\\'t mistakenly '\n            + `think you're viewing the ${langTag} translation value when you're in fact `\n            + 'viewing the primary value. See https://confluence.nike.com/display/G11N/FAQ '\n            + 'for more information.');\n        const fallbackTranslation = icuTokens\n            ? exports.processICUString(originalString, langTag, icuTokens, icuOptions, stringKey)\n            : originalString;\n        return `≪≪${fallbackTranslation}≫≫`;\n    }\n    const finalString = translations[stringKey].value || originalString || stringKey;\n    return icuTokens\n        ? exports.processICUString(finalString, langTag, icuTokens, icuOptions, stringKey)\n        : finalString;\n}\nexports.default = getTranslation;\n//# sourceMappingURL=get-translation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This map serves as a way to overwrite any of our module-specific\n * or other funky iso names coming from the LocalizationPlatform\n */\nexports.default = {\n    // Defaulting to English for our development langs\n    pseudo: 'en',\n    'primary-value': 'en',\n    'string-key': 'en',\n};\n//# sourceMappingURL=locale-map.js.map","\"use strict\";\n// All logs go through here for easier mocking / stubbing\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logError = exports.logWarn = exports.log = void 0;\n/* eslint-disable no-console */\nconst log = (msg) => {\n    console.log(msg);\n};\nexports.log = log;\nconst logWarn = (msg) => {\n    console.warn(msg);\n};\nexports.logWarn = logWarn;\nconst logError = (msg) => {\n    console.error(msg);\n};\nexports.logError = logError;\n/* eslint-enable no-console */\n//# sourceMappingURL=log.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A simple method to check whether or not this current system has INTL\n * support. It's possible to support INTL but not have full icu support,\n * so it optionally can check whether INTL and non-English icu is supported.\n * @param {bool} doFullCheck - Whether or not to do a simple INTL or full INTL check\n * @return {bool} Return\n */\nfunction supportsIntl(doFullCheck = false) {\n    if (!doFullCheck) {\n        return typeof Intl === 'object';\n    }\n    try {\n        const january = new Date(9e8);\n        const spanish = Intl.DateTimeFormat('es', { month: 'long' });\n        return spanish.format(january) === 'enero';\n    }\n    catch (err) {\n        return false;\n    }\n}\nexports.default = supportsIntl;\n//# sourceMappingURL=supports-intl.js.map","import charMap from './reference/character-map';\n\nexport var FULL_CHALLENGING_CHARACTERS = 'Пβシ耐克บั้ รื่بُو';\nexport var PARTIAL_CHALLENGING_CHARACTERS = '耐克รื่بُو';\nexport var EXPANDING_CHAR_STRING = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n/**\n * Performs the expansion of a given string, before pseudo is applied.\n *\n * @param {string} str - The original string to expand\n * @param {number} expansionPercent - The percent to increase the text by\n * @param {string} challengeChars - The characters to append\n * @return {string} Return\n */\nexport function expandString(str, expansionPercent) {\n  var challengeChars = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FULL_CHALLENGING_CHARACTERS;\n\n  var finalStr = str + ' ';\n\n  // How many extra characters need to be added\n  // to the original string on top of the challenge chars?\n  var addLength = Math.round(str.length * (expansionPercent / 100)) - challengeChars.length;\n\n  // Add expansion chars if necessary\n  if (addLength > 0) {\n    finalStr += '' + EXPANDING_CHAR_STRING.substr(0, addLength);\n  }\n\n  // Always append the challenge chars\n  finalStr += challengeChars;\n\n  return finalStr;\n}\n\n/**\n * Transforms a normal string to a pseudo string.\n *\n * @param {string} str - The string to pseudolocalize\n * @return {string}\n */\nexport default function generatePseudo() {\n  var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var finalStr = str;\n\n  // Return if there's no string or it's empty\n  if (!finalStr || finalStr.length === 0) {\n    return '';\n  }\n\n  // Expansion percent agreements: https://jira.nike.com/browse/LT-219\n\n  // XXS -> at most 3 characters, 150% expansion, partial challenging characters\n  if (str.length <= 3) {\n    finalStr = expandString(str, 150, PARTIAL_CHALLENGING_CHARACTERS);\n  }\n\n  // XS -> 3 < x <= 10 characters, 100% expansion, partial challenging characters\n  else if (str.length <= 10) {\n      finalStr = expandString(str, 100, PARTIAL_CHALLENGING_CHARACTERS);\n    }\n\n    // S -> 10 < x <= 20 characters, 80% expansion, full challenging characters\n    else if (str.length <= 20) {\n        finalStr = expandString(str, 80);\n      }\n\n      // M -> 20 < x <= 30 characters, 70% expansion, full challenging characters\n      else if (str.length <= 30) {\n          finalStr = expandString(str, 70);\n        }\n\n        // L -> 30 < x <= 70 characters, 40% expansion, full challenging characters\n        else if (str.length <= 70) {\n            finalStr = expandString(str, 40);\n          }\n\n          // XL -> more than 70 characters, 30% expansion, full challenging characters\n          else {\n              finalStr = expandString(str, 30);\n            }\n\n  var prepend = '[';\n  var append = ']';\n\n  // The characters we should ignore or leave alone\n  var ignoreMap = {\n    '{': function _(char) {\n      return char === '}';\n    },\n    '<': function _(char) {\n      return char === '>';\n    }\n  };\n\n  // Starting out with our prepend\n  var output = prepend;\n\n  var char = void 0;\n  var ignoreFn = void 0;\n\n  for (var i = 0, c = finalStr.length; i < c; i += 1) {\n    char = finalStr[i];\n\n    // if we can stop ignoring\n    if (ignoreFn && ignoreFn(char, i)) {\n      ignoreFn = null;\n    }\n\n    if (!ignoreFn) {\n      ignoreFn = ignoreMap[char];\n      if (!ignoreFn && charMap[char]) {\n        char = charMap[char];\n      }\n    }\n\n    output += char;\n  }\n\n  // End with our append\n  return output + append;\n}","import generatePseudo from './generate-pseudo';\n\nexport default generatePseudo;","export default {\n  a: 'à',\n  b: 'ƀ',\n  c: 'ç',\n  d: 'ð',\n  e: 'é',\n  f: 'ƒ',\n  g: 'ĝ',\n  h: 'ĥ',\n  i: 'î',\n  l: 'ļ',\n  k: 'ķ',\n  j: 'ĵ',\n  m: 'ɱ',\n  n: 'ñ',\n  o: 'ô',\n  p: 'þ',\n  q: 'ǫ',\n  r: 'ŕ',\n  s: 'š',\n  t: 'ţ',\n  u: 'û',\n  v: 'ṽ',\n  w: 'ŵ',\n  x: 'ẋ',\n  y: 'ý',\n  z: 'ž',\n  A: 'À',\n  B: 'Ɓ',\n  C: 'Ç',\n  D: 'Ð',\n  E: 'É',\n  F: 'Ƒ',\n  G: 'Ĝ',\n  H: 'Ĥ',\n  I: 'Î',\n  L: 'Ļ',\n  K: 'Ķ',\n  J: 'Ĵ',\n  M: 'Ṁ',\n  N: 'Ñ',\n  O: 'Ô',\n  P: 'Þ',\n  Q: 'Ǫ',\n  R: 'Ŕ',\n  S: 'Š',\n  T: 'Ţ',\n  U: 'Û',\n  V: 'Ṽ',\n  W: 'Ŵ',\n  X: 'Ẋ',\n  Y: 'Ý',\n  Z: 'Ž',\n  0: '⓪',\n  1: '①',\n  2: '②',\n  3: '③',\n  4: '④',\n  5: '⑤',\n  6: '⑥',\n  7: '⑦',\n  8: '⑧',\n  9: '⑨',\n  '(': '❨',\n  ')': '❩',\n  '&': '⅋'\n};","/**\n * @module shop-public-constants\n * @ignore\n * @nike/shop-components@1.153.0\n */\nexport { CART_COUNT_UPDATED_EVENT_NAME } from '@nike/custom-event-names';\nexport var NIKE_SHOP_ROOT_ID = 'nike-shop-root';"],"sourceRoot":""}