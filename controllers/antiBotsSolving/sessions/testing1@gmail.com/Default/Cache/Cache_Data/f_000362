{"version":3,"sources":["webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/cache/uuid-npm-3.4.0-4fd8ef88ad-58de2feed6.zip/node_modules/uuid/index.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/cache/uuid-npm-3.4.0-4fd8ef88ad-58de2feed6.zip/node_modules/uuid/lib/bytesToUuid.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/cache/uuid-npm-3.4.0-4fd8ef88ad-58de2feed6.zip/node_modules/uuid/lib/rng-browser.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/cache/uuid-npm-3.4.0-4fd8ef88ad-58de2feed6.zip/node_modules/uuid/v1.js","webpack:////tmp/jenkins/workspace/nts_nike_shop-components_1.155.0/.yarn/cache/uuid-npm-3.4.0-4fd8ef88ad-58de2feed6.zip/node_modules/uuid/v4.js","webpack:///./src/actions/handle-errors.js","webpack:///./src/actions/initialize-wishlist.js","webpack:///./src/actions/on-cart-fetch-failure.js","webpack:///./src/actions/on-fetch-failure.js","webpack:///./src/graphql-client.js"],"names":["v1","v4","uuid","module","exports","byteToHex","i","toString","substr","bytesToUuid","buf","offset","bth","join","getRandomValues","crypto","bind","window","msCrypto","rnds8","Uint8Array","whatwgRNG","rnds","Array","mathRNG","r","Math","random","_nodeId","_clockseq","rng","_lastMSecs","_lastNSecs","options","b","node","clockseq","undefined","seedBytes","msecs","Date","getTime","nsecs","dt","Error","tl","tmh","n","ii","handleErrors","service","error","response","dispatch","getState","errors","data","length","forEach","err","message","crcCode","code","field","GRAPHQL_ERROR_CODE","SERVICE_FETCH_CART_CARTS","onCartFetchFailure","state","country","SHOP_STATE_KEY","normalized","result","cart","cartItems","items","itemId","split","onFetchFailure","type","payload","domain","first","after","versionedQuery","internalStore","NikeShop","wishlistId","get","list","id","getCurrentUser","token","userType","params","isDefault","wishlistState","getWishlist","status","fetched","INITIALIZE_WISHLIST_START","graphqlClient","method","variables","isSwoosh","then","lists","objects","createWishlist","brand","NIKE_BRAND","host","API_HOST_NAME","defaultList","remainingDefaultList","listEntity","INITIALIZE_WISHLIST_SUCCESS","listItems","name","pages","totalItemsCount","UPDATE_ENTITIES","dispatchCustomEvent","createCustomEvent","events","listsInitialized","bubbles","detail","rest","INITIALIZE_WISHLIST_FAILURE","body","fetchMoreListItems","FETCH_CARTS_FAILURE","meta","ON_FETCH_FAILURE","args","graphqlFetch","fetchClient","url","process","callerId","getVersion","appId","DOTCOM_UX_ID"],"mappings":"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","file":"initializeWishlist.chunk.26d2cf.js","sourcesContent":["var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import { SERVICE_FETCH_CART_CARTS } from '@nike/cart-constants';\n\nimport onCartFetchFailure from './on-cart-fetch-failure';\nimport onFetchFailure from './on-fetch-failure';\nimport { GRAPHQL_ERROR_CODE, SHOP_STATE_KEY } from '../constants';\n\nconst handleErrors =\n  ({ service, error, response }) =>\n  (dispatch, getState) => {\n    const { errors, data } = error;\n    if (errors && errors.length) {\n      return errors.forEach(err => {\n        const { message, crcCode, code, field } = err;\n        if (crcCode && code !== GRAPHQL_ERROR_CODE) {\n          if (service === SERVICE_FETCH_CART_CARTS) {\n            dispatch(onCartFetchFailure({ code, error: { message, field }, crcCode }));\n            return response;\n          }\n          // Get offending item ID\n          const state = getState();\n          const country = state[SHOP_STATE_KEY]?.normalized?.result?.cart;\n          const cartItems = state[SHOP_STATE_KEY]?.normalized?.cart?.[country]?.items || [];\n          // NOTE if only 1 cart item exists we don't need to look further, regardless of error\n          const index = cartItems.length === 1 ? 0 : field?.split('/')[2];\n          const itemId = cartItems[index];\n          return dispatch(\n            onFetchFailure({\n              service,\n              code,\n              crcCode,\n              field,\n              itemId,\n              data,\n              message,\n            }),\n          );\n        }\n        // NOTE dispatching a separate action for this unsure what to do about it but we can't pop a modal\n        // because of variety of errors that we aren't sure what messaging to show exactly\n        if (code === GRAPHQL_ERROR_CODE) {\n          return dispatch({\n            type: GRAPHQL_ERROR_CODE,\n            payload: err,\n          });\n        }\n        return dispatch({\n          type: 'UNKNOWN_ERROR',\n          payload: { service, error },\n        });\n      });\n    }\n    return dispatch(\n      onFetchFailure({\n        service,\n        message: error?.message || 'Unknown failure',\n        code: error?.code,\n        crcCode: error?.crcCode,\n        data,\n      }),\n    );\n  };\n\nexport default handleErrors;\n","import { createWishlist } from '@nike/ux-tread-wishlist';\nimport {\n  INITIALIZE_WISHLIST_START,\n  getWishlist,\n  INITIALIZE_WISHLIST_SUCCESS,\n  INITIALIZE_WISHLIST_FAILURE,\n} from '@nike/wishlist-redux';\nimport { NIKE_BRAND } from '@nike/ux-tread-dotcom-constants';\nimport getCurrentUser from '../selectors/get-current-user';\nimport handleErrors from './handle-errors';\nimport { API_HOST_NAME, UPDATE_ENTITIES } from '../../src/constants';\nimport graphqlClient from '../graphql-client';\nimport dispatchCustomEvent from '../dispatch-custom-event';\nimport createCustomEvent from '../create-custom-event';\n\nexport default ({ domain, first = 1, after = 0, versionedQuery }) => {\n  return (dispatch, getState) => {\n    const internalStore = window.NikeShop?.internalStore;\n    const shopInstance = window.NikeShop;\n    const wishlistId = shopInstance.get()?.list?.id;\n    const country = window.NikeShop?.country; // existing cart country, already capitalized\n    const { token, userType } = getCurrentUser(internalStore?.getState());\n    const params = {\n      country,\n      isDefault: true,\n    };\n    const state = getState();\n    const wishlistState = getWishlist(state);\n\n    // if wishlist id exists already but status.fetched is not true, ie wishlist default state is not recorded,\n    // then use fetchMoreListItems passing through first and after\n    if (wishlistId && !wishlistState?.status?.fetched) {\n      return window.NikeShop.fetchMoreListItems({\n        first, // determineFirst, if given first, will return first, so it should be ok to use\n        after,\n        versionedQuery: 'getlistpaginatedlistitems/v3',\n      }).then(response => {\n        dispatchCustomEvent(\n          createCustomEvent(window.NikeShop?.get()?.events?.listsInitialized, {\n            bubbles: false,\n            detail: {\n              wishlistId: response?.data?.list?.id || wishlistId,\n            },\n          }),\n        );\n        return response;\n      });\n    }\n\n    dispatch({ type: INITIALIZE_WISHLIST_START });\n\n    return graphqlClient({\n      versionedQuery: versionedQuery || 'getlistsfulllistlistitems/v3',\n      method: 'POST',\n      token,\n      variables: {\n        ...params,\n        first,\n        after,\n        isSwoosh: userType === 'Swoosh',\n      },\n    })\n      .then(response => {\n        return response?.data?.lists?.objects?.length === 0\n          ? // User has no lists associated with their account, so create a default list\n            createWishlist({\n              ...params,\n              brand: NIKE_BRAND, // NOTE brand is necessary only when creating\n              // NOTE the following are only because we might need to mock or alter these for create call and it's via ux-tread-wishlist currently\n              domain,\n              host: API_HOST_NAME,\n              // NOTE token is for passing into create call via tread-wishlist but in future we could move that up here as well too maybe?\n              token,\n            })\n          : response;\n      })\n      .then(\n        response => {\n          // either it exists OR it's newly created or fallback to empty obj for handling destructuring\n          const defaultList = response?.data?.lists?.objects?.[0] || response || {}; // NOTE response is for when defaultList does not exist and we are calling `createWishlist`\n          const { list, ...remainingDefaultList } = defaultList;\n          const listEntity = {\n            country,\n            ...remainingDefaultList,\n            items: list?.items,\n          };\n          dispatch({\n            type: INITIALIZE_WISHLIST_SUCCESS,\n            payload: {\n              list: list || {},\n              items: defaultList?.listItems?.objects || [],\n              name: defaultList?.name,\n              id: defaultList?.id,\n              pages: defaultList?.listItems?.pages || {},\n              totalItemsCount: defaultList?.listItems?.totalItemsCount || 0,\n              errors: response?.data?.errors || response?.errors, // NOTE response.data.errors from grand OR response.errors from createWishlist call\n            },\n          });\n\n          internalStore.dispatch({\n            type: UPDATE_ENTITIES,\n            payload: { listItems: remainingDefaultList?.listItems?.objects, list: listEntity },\n          });\n          dispatchCustomEvent(\n            createCustomEvent(window.NikeShop?.get()?.events?.listsInitialized, {\n              bubbles: false,\n              detail: {\n                wishlistId: defaultList?.id,\n              },\n            }),\n          );\n          return response;\n        },\n        // this can be a partial response with { errors, data } and the data contains the default wishlist id\n        ({ data, errors, ...rest }) => {\n          const defaultList = data?.data?.lists?.objects?.[0] || rest || {}; // NOTE response is for when defaultList does not exist and we are calling `createWishlist`\n          if (data) {\n            // therefore instead of response we'll grab the exact same things from nested data\n            dispatch({\n              type: INITIALIZE_WISHLIST_FAILURE,\n              error: true,\n              payload: {\n                list: defaultList?.list || {},\n                items: defaultList?.listItems?.objects || [],\n                name: defaultList?.name,\n                id: defaultList?.id,\n                pages: defaultList?.listItems?.pages || {},\n                totalItemsCount: defaultList?.listItems?.totalItemsCount,\n                errors: data?.errors?.[0]?.body?.errors || errors, // NOTE downstream errors from grand response will be nested in body response but we will fallback to response.errors as well\n              },\n            });\n            return { data, errors, ...rest };\n          }\n          // just in case it's anything else we'll call failure action with rest\n          dispatch({\n            type: INITIALIZE_WISHLIST_FAILURE,\n            error: true,\n            payload: rest,\n          });\n          internalStore.dispatch(\n            handleErrors({\n              service: 'buy/list_items/v1',\n              error: { errors, ...rest },\n            }),\n          );\n          return { errors, ...rest };\n        },\n      );\n  };\n};\n","import { FETCH_CARTS_FAILURE, SERVICE_FETCH_CART_CARTS } from '@nike/cart-constants';\n\n/**\n * onCartFetchFailure is an action creator that returns a generic failure redux action for\n * error handling that returns a flux standard action type for errors (error:true, payload: error)\n *\n * @param {object} params - named parameters\n * @param {string} params.crcCode - CRC error code\n * @param {string} params.code - error code if one exists\n * @param {Error} params.error - an actual Error object to be assigned to payload\n * @param {object} params.data - any additional error data\n * @returns {object} Redux flux standard action object\n */\nconst onCartFetchFailure = ({ error, crcCode, data, code }) => ({\n  type: FETCH_CARTS_FAILURE,\n  meta: {\n    service: SERVICE_FETCH_CART_CARTS,\n  },\n  error: true,\n  payload: { error, crcCode, data, code },\n});\n\nexport default onCartFetchFailure;\n","import { ON_FETCH_FAILURE } from '../constants';\n\nconst onFetchFailure = ({ service, message, crcCode, data, code, field, itemId }) => ({\n  type: ON_FETCH_FAILURE,\n  meta: {\n    service,\n  },\n  error: true,\n  payload: { message, crcCode, data, code, field, itemId },\n});\n\nexport default onFetchFailure;\n","import graphqlFetch from '@nike/graphql-fetch';\nimport { fetchClient } from '@nike/fetch-client';\nimport { DOTCOM_UX_ID } from '@nike/ux-tread-dotcom-constants';\n\nconst graphqlClient = args =>\n  graphqlFetch({\n    fetchClient,\n    url: process.env.GRAND_URL || 'https://api.nike.com/cic/grand/v1/graphql',\n    callerId: window.NikeShop?.getVersion(),\n    appId: DOTCOM_UX_ID,\n    ...args,\n  });\n\nexport default graphqlClient;\n"],"sourceRoot":""}